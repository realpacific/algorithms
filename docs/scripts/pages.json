[{"name":"ACW","description":"algorithmsinanutshell.Orientation.ACW","location":"algorithms/algorithmsinanutshell/-orientation/-a-c-w/index.html","searchKeys":["ACW","ACW","algorithmsinanutshell.Orientation.ACW"]},{"name":"AVLTree.Node AVLTree.Node(Integer value)","description":"algorithmsinanutshell.AVLTree.Node.AVLTree.Node","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/-node/-a-v-l-tree.-node.html","searchKeys":["Node","AVLTree.Node AVLTree.Node(Integer value)","algorithmsinanutshell.AVLTree.Node.AVLTree.Node"]},{"name":"AVLTree AVLTree(Integer value)","description":"algorithmsinanutshell.AVLTree.AVLTree","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/-a-v-l-tree.html","searchKeys":["AVLTree","AVLTree AVLTree(Integer value)","algorithmsinanutshell.AVLTree.AVLTree"]},{"name":"AllSubsets AllSubsets(Array<Integer> nums)","description":"algorithmdesignmanualbook.heuristics.backtrack.AllSubsets.AllSubsets","location":"algorithms/algorithmdesignmanualbook.heuristics.backtrack/-all-subsets/-all-subsets.html","searchKeys":["AllSubsets","AllSubsets AllSubsets(Array<Integer> nums)","algorithmdesignmanualbook.heuristics.backtrack.AllSubsets.AllSubsets"]},{"name":"Array<Integer> getMultiplicativeArray(Array<Integer> array)","description":"algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDivision.getMultiplicativeArray","location":"algorithms/algorithmdesignmanualbook.datastructures/-multiplicative-array-with-division/get-multiplicative-array.html","searchKeys":["getMultiplicativeArray","Array<Integer> getMultiplicativeArray(Array<Integer> array)","algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDivision.getMultiplicativeArray"]},{"name":"Array<Integer> getMultiplicativeArray(Array<Integer> array)","description":"algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDoubleArrayApproach.getMultiplicativeArray","location":"algorithms/algorithmdesignmanualbook.datastructures/-multiplicative-array-with-double-array-approach/get-multiplicative-array.html","searchKeys":["getMultiplicativeArray","Array<Integer> getMultiplicativeArray(Array<Integer> array)","algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDoubleArrayApproach.getMultiplicativeArray"]},{"name":"BinarySearchTree BinarySearchTree(Node node)","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.BinarySearchTree","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/-binary-search-tree.html","searchKeys":["BinarySearchTree","BinarySearchTree BinarySearchTree(Node node)","algorithmdesignmanualbook.datastructures.BinarySearchTree.BinarySearchTree"]},{"name":"Boolean equals(Object other)","description":"algorithmsinanutshell.Graph.Edge.equals","location":"algorithms/algorithmsinanutshell/-graph/-edge/equals.html","searchKeys":["equals","Boolean equals(Object other)","algorithmsinanutshell.Graph.Edge.equals"]},{"name":"Boolean equals(Object other)","description":"algorithmsinanutshell.Graph.Vertex.equals","location":"algorithms/algorithmsinanutshell/-graph/-vertex/equals.html","searchKeys":["equals","Boolean equals(Object other)","algorithmsinanutshell.Graph.Vertex.equals"]},{"name":"Boolean equals(Object other)","description":"algorithmsinanutshell.networkflow.Network.Edge.equals","location":"algorithms/algorithmsinanutshell.networkflow/-network/-edge/equals.html","searchKeys":["equals","Boolean equals(Object other)","algorithmsinanutshell.networkflow.Network.Edge.equals"]},{"name":"BucketSort BucketSort(IntArray arr)","description":"algorithmdesignmanualbook.sorting.BucketSort.BucketSort","location":"algorithms/algorithmdesignmanualbook.sorting/-bucket-sort/-bucket-sort.html","searchKeys":["BucketSort","BucketSort BucketSort(IntArray arr)","algorithmdesignmanualbook.sorting.BucketSort.BucketSort"]},{"name":"COLINEAR","description":"algorithmsinanutshell.Orientation.COLINEAR","location":"algorithms/algorithmsinanutshell/-orientation/-c-o-l-i-n-e-a-r/index.html","searchKeys":["COLINEAR","COLINEAR","algorithmsinanutshell.Orientation.COLINEAR"]},{"name":"CW","description":"algorithmsinanutshell.Orientation.CW","location":"algorithms/algorithmsinanutshell/-orientation/-c-w/index.html","searchKeys":["CW","CW","algorithmsinanutshell.Orientation.CW"]},{"name":"ConvexHullScanUsingGrahamScan ConvexHullScanUsingGrahamScan(Array<Point> points)","description":"algorithmsinanutshell.ConvexHullScanUsingGrahamScan.ConvexHullScanUsingGrahamScan","location":"algorithms/algorithmsinanutshell/-convex-hull-scan-using-graham-scan/-convex-hull-scan-using-graham-scan.html","searchKeys":["ConvexHullScanUsingGrahamScan","ConvexHullScanUsingGrahamScan ConvexHullScanUsingGrahamScan(Array<Point> points)","algorithmsinanutshell.ConvexHullScanUsingGrahamScan.ConvexHullScanUsingGrahamScan"]},{"name":"DISCOVERED","description":"algorithmdesignmanualbook.graph.Graph.State.DISCOVERED","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-state/-d-i-s-c-o-v-e-r-e-d/index.html","searchKeys":["DISCOVERED","DISCOVERED","algorithmdesignmanualbook.graph.Graph.State.DISCOVERED"]},{"name":"DijkstraAlgorithm DijkstraAlgorithm(Graph graph, Graph.Vertex startVertex, Graph.Vertex endVertex)","description":"algorithmsinanutshell.DijkstraAlgorithm.DijkstraAlgorithm","location":"algorithms/algorithmsinanutshell/-dijkstra-algorithm/-dijkstra-algorithm.html","searchKeys":["DijkstraAlgorithm","DijkstraAlgorithm DijkstraAlgorithm(Graph graph, Graph.Vertex startVertex, Graph.Vertex endVertex)","algorithmsinanutshell.DijkstraAlgorithm.DijkstraAlgorithm"]},{"name":"Discovered","description":"algorithmsinanutshell.Graph.State.Discovered","location":"algorithms/algorithmsinanutshell/-graph/-state/-discovered/index.html","searchKeys":["Discovered","Discovered","algorithmsinanutshell.Graph.State.Discovered"]},{"name":"FlattenBSTIntoLinkedList FlattenBSTIntoLinkedList(BinarySearchTree bst)","description":"algorithmdesignmanualbook.datastructures.FlattenBSTIntoLinkedList.FlattenBSTIntoLinkedList","location":"algorithms/algorithmdesignmanualbook.datastructures/-flatten-b-s-t-into-linked-list/-flatten-b-s-t-into-linked-list.html","searchKeys":["FlattenBSTIntoLinkedList","FlattenBSTIntoLinkedList FlattenBSTIntoLinkedList(BinarySearchTree bst)","algorithmdesignmanualbook.datastructures.FlattenBSTIntoLinkedList.FlattenBSTIntoLinkedList"]},{"name":"FloydWarshallAlgorithm FloydWarshallAlgorithm(Graph graph)","description":"algorithmsinanutshell.FloydWarshallAlgorithm.FloydWarshallAlgorithm","location":"algorithms/algorithmsinanutshell/-floyd-warshall-algorithm/-floyd-warshall-algorithm.html","searchKeys":["FloydWarshallAlgorithm","FloydWarshallAlgorithm FloydWarshallAlgorithm(Graph graph)","algorithmsinanutshell.FloydWarshallAlgorithm.FloydWarshallAlgorithm"]},{"name":"FordFulkersonAlgorithm FordFulkersonAlgorithm(Network network)","description":"algorithmsinanutshell.networkflow.FordFulkersonAlgorithm.FordFulkersonAlgorithm","location":"algorithms/algorithmsinanutshell.networkflow/-ford-fulkerson-algorithm/-ford-fulkerson-algorithm.html","searchKeys":["FordFulkersonAlgorithm","FordFulkersonAlgorithm FordFulkersonAlgorithm(Network network)","algorithmsinanutshell.networkflow.FordFulkersonAlgorithm.FordFulkersonAlgorithm"]},{"name":"Graph.Edge Graph.Edge(Graph.Vertex startVertex, Graph.Vertex endVertex)","description":"algorithmdesignmanualbook.graph.Graph.Edge.Graph.Edge","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-edge/-graph.-edge.html","searchKeys":["Edge","Graph.Edge Graph.Edge(Graph.Vertex startVertex, Graph.Vertex endVertex)","algorithmdesignmanualbook.graph.Graph.Edge.Graph.Edge"]},{"name":"Graph.Edge Graph.Edge(Graph.Vertex startVertex, Graph.Vertex endVertex, Integer weight)","description":"algorithmsinanutshell.Graph.Edge.Graph.Edge","location":"algorithms/algorithmsinanutshell/-graph/-edge/-graph.-edge.html","searchKeys":["Edge","Graph.Edge Graph.Edge(Graph.Vertex startVertex, Graph.Vertex endVertex, Integer weight)","algorithmsinanutshell.Graph.Edge.Graph.Edge"]},{"name":"Graph.Vertex Graph.Vertex(Integer value)","description":"algorithmsinanutshell.Graph.Vertex.Graph.Vertex","location":"algorithms/algorithmsinanutshell/-graph/-vertex/-graph.-vertex.html","searchKeys":["Vertex","Graph.Vertex Graph.Vertex(Integer value)","algorithmsinanutshell.Graph.Vertex.Graph.Vertex"]},{"name":"Graph.Vertex Graph.Vertex(String value)","description":"algorithmdesignmanualbook.graph.Graph.Vertex.Graph.Vertex","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-vertex/-graph.-vertex.html","searchKeys":["Vertex","Graph.Vertex Graph.Vertex(String value)","algorithmdesignmanualbook.graph.Graph.Vertex.Graph.Vertex"]},{"name":"Graph Graph(Boolean isDirected)","description":"algorithmdesignmanualbook.graph.Graph.Graph","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-graph.html","searchKeys":["Graph","Graph Graph(Boolean isDirected)","algorithmdesignmanualbook.graph.Graph.Graph"]},{"name":"Graph Graph(Relation relation)","description":"algorithmsinanutshell.Graph.Graph","location":"algorithms/algorithmsinanutshell/-graph/-graph.html","searchKeys":["Graph","Graph Graph(Relation relation)","algorithmsinanutshell.Graph.Graph"]},{"name":"HeapSort HeapSort()","description":"algorithmdesignmanualbook.sorting.HeapSort.HeapSort","location":"algorithms/algorithmdesignmanualbook.sorting/-heap-sort/-heap-sort.html","searchKeys":["HeapSort","HeapSort HeapSort()","algorithmdesignmanualbook.sorting.HeapSort.HeapSort"]},{"name":"IdenticalBinaryTree IdenticalBinaryTree(BinarySearchTree bst1, BinarySearchTree bst2)","description":"algorithmdesignmanualbook.datastructures.IdenticalBinaryTree.IdenticalBinaryTree","location":"algorithms/algorithmdesignmanualbook.datastructures/-identical-binary-tree/-identical-binary-tree.html","searchKeys":["IdenticalBinaryTree","IdenticalBinaryTree IdenticalBinaryTree(BinarySearchTree bst1, BinarySearchTree bst2)","algorithmdesignmanualbook.datastructures.IdenticalBinaryTree.IdenticalBinaryTree"]},{"name":"Integer getSmallest(Integer startIndex, Integer endIndex)","description":"algorithmdesignmanualbook.datastructures.SmallestNumberInRangeHashMapApproach.getSmallest","location":"algorithms/algorithmdesignmanualbook.datastructures/-smallest-number-in-range-hash-map-approach/get-smallest.html","searchKeys":["getSmallest","Integer getSmallest(Integer startIndex, Integer endIndex)","algorithmdesignmanualbook.datastructures.SmallestNumberInRangeHashMapApproach.getSmallest"]},{"name":"Integer getSmallest(Integer startIndex, Integer endIndex)","description":"algorithmdesignmanualbook.datastructures.SmallestNumberInRangeMatrixApproach.getSmallest","location":"algorithms/algorithmdesignmanualbook.datastructures/-smallest-number-in-range-matrix-approach/get-smallest.html","searchKeys":["getSmallest","Integer getSmallest(Integer startIndex, Integer endIndex)","algorithmdesignmanualbook.datastructures.SmallestNumberInRangeMatrixApproach.getSmallest"]},{"name":"Integer hashCode()","description":"algorithmsinanutshell.Graph.Edge.hashCode","location":"algorithms/algorithmsinanutshell/-graph/-edge/hash-code.html","searchKeys":["hashCode","Integer hashCode()","algorithmsinanutshell.Graph.Edge.hashCode"]},{"name":"Integer hashCode()","description":"algorithmsinanutshell.Graph.Vertex.hashCode","location":"algorithms/algorithmsinanutshell/-graph/-vertex/hash-code.html","searchKeys":["hashCode","Integer hashCode()","algorithmsinanutshell.Graph.Vertex.hashCode"]},{"name":"Integer hashCode()","description":"algorithmsinanutshell.networkflow.Network.Edge.hashCode","location":"algorithms/algorithmsinanutshell.networkflow/-network/-edge/hash-code.html","searchKeys":["hashCode","Integer hashCode()","algorithmsinanutshell.networkflow.Network.Edge.hashCode"]},{"name":"IntersectionOfLines IntersectionOfLines(Line l1, Line l2)","description":"algorithmsinanutshell.IntersectionOfLines.IntersectionOfLines","location":"algorithms/algorithmsinanutshell/-intersection-of-lines/-intersection-of-lines.html","searchKeys":["IntersectionOfLines","IntersectionOfLines IntersectionOfLines(Line l1, Line l2)","algorithmsinanutshell.IntersectionOfLines.IntersectionOfLines"]},{"name":"KDTree KDTree(Array<Array<Integer>> array)","description":"algorithmsinanutshell.spatialtree.KDTree.KDTree","location":"algorithms/algorithmsinanutshell.spatialtree/-k-d-tree/-k-d-tree.html","searchKeys":["KDTree","KDTree KDTree(Array<Array<Integer>> array)","algorithmsinanutshell.spatialtree.KDTree.KDTree"]},{"name":"KnapSack01 KnapSack01(IntArray weights, IntArray profits, Integer totalCapacity)","description":"algorithmsinanutshell.spatialtree.KnapSack01.KnapSack01","location":"algorithms/algorithmsinanutshell.spatialtree/-knap-sack01/-knap-sack01.html","searchKeys":["KnapSack01","KnapSack01 KnapSack01(IntArray weights, IntArray profits, Integer totalCapacity)","algorithmsinanutshell.spatialtree.KnapSack01.KnapSack01"]},{"name":"LineSweepAlgorithm LineSweepAlgorithm(List<Line> lines)","description":"algorithmsinanutshell.LineSweepAlgorithm.LineSweepAlgorithm","location":"algorithms/algorithmsinanutshell/-line-sweep-algorithm/-line-sweep-algorithm.html","searchKeys":["LineSweepAlgorithm","LineSweepAlgorithm LineSweepAlgorithm(List<Line> lines)","algorithmsinanutshell.LineSweepAlgorithm.LineSweepAlgorithm"]},{"name":"Line Line(Point p1, Point p2)","description":"algorithmsinanutshell.Line.Line","location":"algorithms/algorithmsinanutshell/-line/-line.html","searchKeys":["Line","Line Line(Point p1, Point p2)","algorithmsinanutshell.Line.Line"]},{"name":"LinkedListNode LinkedListNode(Integer value)","description":"algorithmdesignmanualbook.datastructures.LinkedListNode.LinkedListNode","location":"algorithms/algorithmdesignmanualbook.datastructures/-linked-list-node/-linked-list-node.html","searchKeys":["LinkedListNode","LinkedListNode LinkedListNode(Integer value)","algorithmdesignmanualbook.datastructures.LinkedListNode.LinkedListNode"]},{"name":"LinkedList LinkedList()","description":"linkedlists.LinkedList.LinkedList","location":"algorithms/linkedlists/-linked-list/-linked-list.html","searchKeys":["LinkedList","LinkedList LinkedList()","linkedlists.LinkedList.LinkedList"]},{"name":"MultiDimNode MultiDimNode(Array<Integer> value, MultiDimNode left, MultiDimNode right)","description":"algorithmsinanutshell.spatialtree.MultiDimNode.MultiDimNode","location":"algorithms/algorithmsinanutshell.spatialtree/-multi-dim-node/-multi-dim-node.html","searchKeys":["MultiDimNode","MultiDimNode MultiDimNode(Array<Integer> value, MultiDimNode left, MultiDimNode right)","algorithmsinanutshell.spatialtree.MultiDimNode.MultiDimNode"]},{"name":"MultiplicativeArrayWithDivision MultiplicativeArrayWithDivision()","description":"algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDivision.MultiplicativeArrayWithDivision","location":"algorithms/algorithmdesignmanualbook.datastructures/-multiplicative-array-with-division/-multiplicative-array-with-division.html","searchKeys":["MultiplicativeArrayWithDivision","MultiplicativeArrayWithDivision MultiplicativeArrayWithDivision()","algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDivision.MultiplicativeArrayWithDivision"]},{"name":"MultiplicativeArrayWithDoubleArrayApproach MultiplicativeArrayWithDoubleArrayApproach()","description":"algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDoubleArrayApproach.MultiplicativeArrayWithDoubleArrayApproach","location":"algorithms/algorithmdesignmanualbook.datastructures/-multiplicative-array-with-double-array-approach/-multiplicative-array-with-double-array-approach.html","searchKeys":["MultiplicativeArrayWithDoubleArrayApproach","MultiplicativeArrayWithDoubleArrayApproach MultiplicativeArrayWithDoubleArrayApproach()","algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDoubleArrayApproach.MultiplicativeArrayWithDoubleArrayApproach"]},{"name":"NearestNeighbourQueries NearestNeighbourQueries(Array<Array<Integer>> array)","description":"algorithmsinanutshell.spatialtree.NearestNeighbourQueries.NearestNeighbourQueries","location":"algorithms/algorithmsinanutshell.spatialtree/-nearest-neighbour-queries/-nearest-neighbour-queries.html","searchKeys":["NearestNeighbourQueries","NearestNeighbourQueries NearestNeighbourQueries(Array<Array<Integer>> array)","algorithmsinanutshell.spatialtree.NearestNeighbourQueries.NearestNeighbourQueries"]},{"name":"Network.Edge Network.Edge(Network.Vertex start, Network.Vertex end, Integer capacity)","description":"algorithmsinanutshell.networkflow.Network.Edge.Network.Edge","location":"algorithms/algorithmsinanutshell.networkflow/-network/-edge/-network.-edge.html","searchKeys":["Edge","Network.Edge Network.Edge(Network.Vertex start, Network.Vertex end, Integer capacity)","algorithmsinanutshell.networkflow.Network.Edge.Network.Edge"]},{"name":"Network.Vertex Network.Vertex(Character name)","description":"algorithmsinanutshell.networkflow.Network.Vertex.Network.Vertex","location":"algorithms/algorithmsinanutshell.networkflow/-network/-vertex/-network.-vertex.html","searchKeys":["Vertex","Network.Vertex Network.Vertex(Character name)","algorithmsinanutshell.networkflow.Network.Vertex.Network.Vertex"]},{"name":"Network Network()","description":"algorithmsinanutshell.networkflow.Network.Network","location":"algorithms/algorithmsinanutshell.networkflow/-network/-network.html","searchKeys":["Network","Network Network()","algorithmsinanutshell.networkflow.Network.Network"]},{"name":"NoInitializationArray NoInitializationArray(Integer maxValue, Integer maxSize)","description":"algorithmdesignmanualbook.datastructures.NoInitializationArray.NoInitializationArray","location":"algorithms/algorithmdesignmanualbook.datastructures/-no-initialization-array/-no-initialization-array.html","searchKeys":["NoInitializationArray","NoInitializationArray NoInitializationArray(Integer maxValue, Integer maxSize)","algorithmdesignmanualbook.datastructures.NoInitializationArray.NoInitializationArray"]},{"name":"Node Node(Integer value)","description":"algorithmdesignmanualbook.datastructures.Node.Node","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/-node.html","searchKeys":["Node","Node Node(Integer value)","algorithmdesignmanualbook.datastructures.Node.Node"]},{"name":"Node Node(Integer value, Node next)","description":"linkedlists.Node.Node","location":"algorithms/linkedlists/-node/-node.html","searchKeys":["Node","Node Node(Integer value, Node next)","linkedlists.Node.Node"]},{"name":"Node deepCopy()","description":"graphs.commons.Node.deepCopy","location":"algorithms/graphs.commons/-node/deep-copy.html","searchKeys":["deepCopy","Node deepCopy()","graphs.commons.Node.deepCopy"]},{"name":"O1DataStructure O1DataStructure()","description":"algorithmdesignmanualbook.datastructures.O1DataStructure.O1DataStructure","location":"algorithms/algorithmdesignmanualbook.datastructures/-o1-data-structure/-o1-data-structure.html","searchKeys":["O1DataStructure","O1DataStructure O1DataStructure()","algorithmdesignmanualbook.datastructures.O1DataStructure.O1DataStructure"]},{"name":"PROCESSED","description":"algorithmdesignmanualbook.graph.Graph.State.PROCESSED","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-state/-p-r-o-c-e-s-s-e-d/index.html","searchKeys":["PROCESSED","PROCESSED","algorithmdesignmanualbook.graph.Graph.State.PROCESSED"]},{"name":"PartialSumUsingFenwickTree PartialSumUsingFenwickTree(Array<Integer> values)","description":"algorithmdesignmanualbook.partialsum.PartialSumUsingFenwickTree.PartialSumUsingFenwickTree","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum-using-fenwick-tree/-partial-sum-using-fenwick-tree.html","searchKeys":["PartialSumUsingFenwickTree","PartialSumUsingFenwickTree PartialSumUsingFenwickTree(Array<Integer> values)","algorithmdesignmanualbook.partialsum.PartialSumUsingFenwickTree.PartialSumUsingFenwickTree"]},{"name":"PartialSum PartialSum(Array<Integer> values)","description":"algorithmdesignmanualbook.partialsum.PartialSum.PartialSum","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum/-partial-sum.html","searchKeys":["PartialSum","PartialSum PartialSum(Array<Integer> values)","algorithmdesignmanualbook.partialsum.PartialSum.PartialSum"]},{"name":"Permutation Permutation(String str)","description":"algorithmdesignmanualbook.heuristics.backtrack.Permutation.Permutation","location":"algorithms/algorithmdesignmanualbook.heuristics.backtrack/-permutation/-permutation.html","searchKeys":["Permutation","Permutation Permutation(String str)","algorithmdesignmanualbook.heuristics.backtrack.Permutation.Permutation"]},{"name":"Point Point(Integer x, Integer y)","description":"algorithmsinanutshell.Point.Point","location":"algorithms/algorithmsinanutshell/-point/-point.html","searchKeys":["Point","Point Point(Integer x, Integer y)","algorithmsinanutshell.Point.Point"]},{"name":"PrimMinSpanningTreeAlgorithm PrimMinSpanningTreeAlgorithm(Graph graph)","description":"algorithmsinanutshell.PrimMinSpanningTreeAlgorithm.PrimMinSpanningTreeAlgorithm","location":"algorithms/algorithmsinanutshell/-prim-min-spanning-tree-algorithm/-prim-min-spanning-tree-algorithm.html","searchKeys":["PrimMinSpanningTreeAlgorithm","PrimMinSpanningTreeAlgorithm PrimMinSpanningTreeAlgorithm(Graph graph)","algorithmsinanutshell.PrimMinSpanningTreeAlgorithm.PrimMinSpanningTreeAlgorithm"]},{"name":"Processing","description":"algorithmsinanutshell.Graph.State.Processing","location":"algorithms/algorithmsinanutshell/-graph/-state/-processing/index.html","searchKeys":["Processing","Processing","algorithmsinanutshell.Graph.State.Processing"]},{"name":"QuadTree.QuadNode QuadTree.QuadNode(Integer value, Point point)","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.QuadTree.QuadNode","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/-quad-tree.-quad-node.html","searchKeys":["QuadNode","QuadTree.QuadNode QuadTree.QuadNode(Integer value, Point point)","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.QuadTree.QuadNode"]},{"name":"QuadTree QuadTree()","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadTree","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-tree.html","searchKeys":["QuadTree","QuadTree QuadTree()","algorithmsinanutshell.spatialtree.QuadTree.QuadTree"]},{"name":"SimpleGraph.Edge SimpleGraph.Edge(Integer src, Integer dest, Integer weight)","description":"algorithmdesignmanualbook.graph.SimpleGraph.Edge.SimpleGraph.Edge","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/-edge/-simple-graph.-edge.html","searchKeys":["Edge","SimpleGraph.Edge SimpleGraph.Edge(Integer src, Integer dest, Integer weight)","algorithmdesignmanualbook.graph.SimpleGraph.Edge.SimpleGraph.Edge"]},{"name":"SimpleGraph SimpleGraph(Integer vertexCount, Integer edgesCount)","description":"algorithmdesignmanualbook.graph.SimpleGraph.SimpleGraph","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/-simple-graph.html","searchKeys":["SimpleGraph","SimpleGraph SimpleGraph(Integer vertexCount, Integer edgesCount)","algorithmdesignmanualbook.graph.SimpleGraph.SimpleGraph"]},{"name":"SmallestNumberInRangeHashMapApproach SmallestNumberInRangeHashMapApproach(Array<Integer> values)","description":"algorithmdesignmanualbook.datastructures.SmallestNumberInRangeHashMapApproach.SmallestNumberInRangeHashMapApproach","location":"algorithms/algorithmdesignmanualbook.datastructures/-smallest-number-in-range-hash-map-approach/-smallest-number-in-range-hash-map-approach.html","searchKeys":["SmallestNumberInRangeHashMapApproach","SmallestNumberInRangeHashMapApproach SmallestNumberInRangeHashMapApproach(Array<Integer> values)","algorithmdesignmanualbook.datastructures.SmallestNumberInRangeHashMapApproach.SmallestNumberInRangeHashMapApproach"]},{"name":"SmallestNumberInRangeMatrixApproach SmallestNumberInRangeMatrixApproach(Array<Integer> values)","description":"algorithmdesignmanualbook.datastructures.SmallestNumberInRangeMatrixApproach.SmallestNumberInRangeMatrixApproach","location":"algorithms/algorithmdesignmanualbook.datastructures/-smallest-number-in-range-matrix-approach/-smallest-number-in-range-matrix-approach.html","searchKeys":["SmallestNumberInRangeMatrixApproach","SmallestNumberInRangeMatrixApproach SmallestNumberInRangeMatrixApproach(Array<Integer> values)","algorithmdesignmanualbook.datastructures.SmallestNumberInRangeMatrixApproach.SmallestNumberInRangeMatrixApproach"]},{"name":"String toString()","description":"algorithmdesignmanualbook.datastructures.Node.toString","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/to-string.html","searchKeys":["toString","String toString()","algorithmdesignmanualbook.datastructures.Node.toString"]},{"name":"String toString()","description":"algorithmdesignmanualbook.graph.Graph.Edge.toString","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-edge/to-string.html","searchKeys":["toString","String toString()","algorithmdesignmanualbook.graph.Graph.Edge.toString"]},{"name":"String toString()","description":"algorithmdesignmanualbook.graph.Graph.Vertex.toString","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-vertex/to-string.html","searchKeys":["toString","String toString()","algorithmdesignmanualbook.graph.Graph.Vertex.toString"]},{"name":"String toString()","description":"algorithmdesignmanualbook.graph.Graph.toString","location":"algorithms/algorithmdesignmanualbook.graph/-graph/to-string.html","searchKeys":["toString","String toString()","algorithmdesignmanualbook.graph.Graph.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.AVLTree.Node.toString","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/-node/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.AVLTree.Node.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.AVLTree.toString","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.AVLTree.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.Graph.Edge.toString","location":"algorithms/algorithmsinanutshell/-graph/-edge/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.Graph.Edge.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.Graph.Vertex.toString","location":"algorithms/algorithmsinanutshell/-graph/-vertex/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.Graph.Vertex.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.Graph.toString","location":"algorithms/algorithmsinanutshell/-graph/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.Graph.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.networkflow.Network.Edge.toString","location":"algorithms/algorithmsinanutshell.networkflow/-network/-edge/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.networkflow.Network.Edge.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.networkflow.Network.Vertex.toString","location":"algorithms/algorithmsinanutshell.networkflow/-network/-vertex/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.networkflow.Network.Vertex.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.networkflow.Network.toString","location":"algorithms/algorithmsinanutshell.networkflow/-network/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.networkflow.Network.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.spatialtree.MultiDimNode.toString","location":"algorithms/algorithmsinanutshell.spatialtree/-multi-dim-node/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.spatialtree.MultiDimNode.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.toString","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.toString"]},{"name":"String toString()","description":"algorithmsinanutshell.spatialtree.QuadTree.toString","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/to-string.html","searchKeys":["toString","String toString()","algorithmsinanutshell.spatialtree.QuadTree.toString"]},{"name":"String toString()","description":"graphs.commons.BidirectionalTree.toString","location":"algorithms/graphs.commons/-bidirectional-tree/to-string.html","searchKeys":["toString","String toString()","graphs.commons.BidirectionalTree.toString"]},{"name":"String toString()","description":"graphs.commons.Graph.Edge.toString","location":"algorithms/graphs.commons/-graph/-edge/to-string.html","searchKeys":["toString","String toString()","graphs.commons.Graph.Edge.toString"]},{"name":"String toString()","description":"graphs.commons.Graph.Vertex.toString","location":"algorithms/graphs.commons/-graph/-vertex/to-string.html","searchKeys":["toString","String toString()","graphs.commons.Graph.Vertex.toString"]},{"name":"String toString()","description":"graphs.commons.Graph.toString","location":"algorithms/graphs.commons/-graph/to-string.html","searchKeys":["toString","String toString()","graphs.commons.Graph.toString"]},{"name":"String toString()","description":"graphs.commons.Tree.toString","location":"algorithms/graphs.commons/-tree/to-string.html","searchKeys":["toString","String toString()","graphs.commons.Tree.toString"]},{"name":"String toString()","description":"hard.Shuffle.Card.toString","location":"algorithms/hard/-shuffle/-card/to-string.html","searchKeys":["toString","String toString()","hard.Shuffle.Card.toString"]},{"name":"String toString()","description":"linkedlists.Node.toString","location":"algorithms/linkedlists/-node/to-string.html","searchKeys":["toString","String toString()","linkedlists.Node.toString"]},{"name":"UNDISCOVERED","description":"algorithmdesignmanualbook.graph.Graph.State.UNDISCOVERED","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-state/-u-n-d-i-s-c-o-v-e-r-e-d/index.html","searchKeys":["UNDISCOVERED","UNDISCOVERED","algorithmdesignmanualbook.graph.Graph.State.UNDISCOVERED"]},{"name":"UNVISITED","description":"graphs.commons.State.UNVISITED","location":"algorithms/graphs.commons/-state/-u-n-v-i-s-i-t-e-d/index.html","searchKeys":["UNVISITED","UNVISITED","graphs.commons.State.UNVISITED"]},{"name":"UNWEIGHTED_DIRECTED","description":"algorithmsinanutshell.Relation.UNWEIGHTED_DIRECTED","location":"algorithms/algorithmsinanutshell/-relation/-u-n-w-e-i-g-h-t-e-d_-d-i-r-e-c-t-e-d/index.html","searchKeys":["UNWEIGHTED_DIRECTED","UNWEIGHTED_DIRECTED","algorithmsinanutshell.Relation.UNWEIGHTED_DIRECTED"]},{"name":"UNWEIGHTED_UNDIRECTED","description":"algorithmsinanutshell.Relation.UNWEIGHTED_UNDIRECTED","location":"algorithms/algorithmsinanutshell/-relation/-u-n-w-e-i-g-h-t-e-d_-u-n-d-i-r-e-c-t-e-d/index.html","searchKeys":["UNWEIGHTED_UNDIRECTED","UNWEIGHTED_UNDIRECTED","algorithmsinanutshell.Relation.UNWEIGHTED_UNDIRECTED"]},{"name":"Undiscovered","description":"algorithmsinanutshell.Graph.State.Undiscovered","location":"algorithms/algorithmsinanutshell/-graph/-state/-undiscovered/index.html","searchKeys":["Undiscovered","Undiscovered","algorithmsinanutshell.Graph.State.Undiscovered"]},{"name":"Unit add(Node newNode)","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.add","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/add.html","searchKeys":["add","Unit add(Node newNode)","algorithmdesignmanualbook.datastructures.BinarySearchTree.add"]},{"name":"Unit deleteFirst(Integer value)","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.deleteFirst","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/delete-first.html","searchKeys":["deleteFirst","Unit deleteFirst(Integer value)","algorithmdesignmanualbook.datastructures.BinarySearchTree.deleteFirst"]},{"name":"VISITED","description":"graphs.commons.State.VISITED","location":"algorithms/graphs.commons/-state/-v-i-s-i-t-e-d/index.html","searchKeys":["VISITED","VISITED","graphs.commons.State.VISITED"]},{"name":"VISITING","description":"graphs.commons.State.VISITING","location":"algorithms/graphs.commons/-state/-v-i-s-i-t-i-n-g/index.html","searchKeys":["VISITING","VISITING","graphs.commons.State.VISITING"]},{"name":"WEIGHTED_DIRECTED","description":"algorithmsinanutshell.Relation.WEIGHTED_DIRECTED","location":"algorithms/algorithmsinanutshell/-relation/-w-e-i-g-h-t-e-d_-d-i-r-e-c-t-e-d/index.html","searchKeys":["WEIGHTED_DIRECTED","WEIGHTED_DIRECTED","algorithmsinanutshell.Relation.WEIGHTED_DIRECTED"]},{"name":"WEIGHTED_UNDIRECTED","description":"algorithmsinanutshell.Relation.WEIGHTED_UNDIRECTED","location":"algorithms/algorithmsinanutshell/-relation/-w-e-i-g-h-t-e-d_-u-n-d-i-r-e-c-t-e-d/index.html","searchKeys":["WEIGHTED_UNDIRECTED","WEIGHTED_UNDIRECTED","algorithmsinanutshell.Relation.WEIGHTED_UNDIRECTED"]},{"name":"final AVLTree.Node add(Integer value)","description":"algorithmsinanutshell.AVLTree.Node.add","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/-node/add.html","searchKeys":["add","final AVLTree.Node add(Integer value)","algorithmsinanutshell.AVLTree.Node.add"]},{"name":"final AVLTree.Node getLeft()","description":"algorithmsinanutshell.AVLTree.Node.getLeft","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/-node/get-left.html","searchKeys":["getLeft","final AVLTree.Node getLeft()","algorithmsinanutshell.AVLTree.Node.getLeft"]},{"name":"final AVLTree.Node getRight()","description":"algorithmsinanutshell.AVLTree.Node.getRight","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/-node/get-right.html","searchKeys":["getRight","final AVLTree.Node getRight()","algorithmsinanutshell.AVLTree.Node.getRight"]},{"name":"final AVLTree.Node getRoot()","description":"algorithmsinanutshell.AVLTree.getRoot","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/get-root.html","searchKeys":["getRoot","final AVLTree.Node getRoot()","algorithmsinanutshell.AVLTree.getRoot"]},{"name":"final Array<Array<Integer>> getArray()","description":"algorithmsinanutshell.spatialtree.KDTree.getArray","location":"algorithms/algorithmsinanutshell.spatialtree/-k-d-tree/get-array.html","searchKeys":["getArray","final Array<Array<Integer>> getArray()","algorithmsinanutshell.spatialtree.KDTree.getArray"]},{"name":"final Array<Array<Integer>> getArray()","description":"algorithmsinanutshell.spatialtree.NearestNeighbourQueries.getArray","location":"algorithms/algorithmsinanutshell.spatialtree/-nearest-neighbour-queries/get-array.html","searchKeys":["getArray","final Array<Array<Integer>> getArray()","algorithmsinanutshell.spatialtree.NearestNeighbourQueries.getArray"]},{"name":"final Array<IntArray> getProfitMatrix()","description":"algorithmsinanutshell.spatialtree.KnapSack01.getProfitMatrix","location":"algorithms/algorithmsinanutshell.spatialtree/-knap-sack01/get-profit-matrix.html","searchKeys":["getProfitMatrix","final Array<IntArray> getProfitMatrix()","algorithmsinanutshell.spatialtree.KnapSack01.getProfitMatrix"]},{"name":"final Array<Integer> getTree()","description":"algorithmdesignmanualbook.partialsum.PartialSumUsingFenwickTree.getTree","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum-using-fenwick-tree/get-tree.html","searchKeys":["getTree","final Array<Integer> getTree()","algorithmdesignmanualbook.partialsum.PartialSumUsingFenwickTree.getTree"]},{"name":"final Array<Integer> getValue()","description":"algorithmsinanutshell.spatialtree.MultiDimNode.getValue","location":"algorithms/algorithmsinanutshell.spatialtree/-multi-dim-node/get-value.html","searchKeys":["getValue","final Array<Integer> getValue()","algorithmsinanutshell.spatialtree.MultiDimNode.getValue"]},{"name":"final Array<Integer> peekArray()","description":"algorithmdesignmanualbook.sorting.HeapSort.peekArray","location":"algorithms/algorithmdesignmanualbook.sorting/-heap-sort/peek-array.html","searchKeys":["peekArray","final Array<Integer> peekArray()","algorithmdesignmanualbook.sorting.HeapSort.peekArray"]},{"name":"final Array<SimpleGraph.Edge> getEdges()","description":"algorithmdesignmanualbook.graph.SimpleGraph.getEdges","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/get-edges.html","searchKeys":["getEdges","final Array<SimpleGraph.Edge> getEdges()","algorithmdesignmanualbook.graph.SimpleGraph.getEdges"]},{"name":"final BinarySearchTree toBST()","description":"algorithmdesignmanualbook.datastructures.Node.toBST","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/to-b-s-t.html","searchKeys":["toBST","final BinarySearchTree toBST()","algorithmdesignmanualbook.datastructures.Node.toBST"]},{"name":"final Boolean areIdentical()","description":"algorithmdesignmanualbook.datastructures.IdenticalBinaryTree.areIdentical","location":"algorithms/algorithmdesignmanualbook.datastructures/-identical-binary-tree/are-identical.html","searchKeys":["areIdentical","final Boolean areIdentical()","algorithmdesignmanualbook.datastructures.IdenticalBinaryTree.areIdentical"]},{"name":"final Boolean hasDuplicates()","description":"linkedlists.LinkedList.hasDuplicates","location":"algorithms/linkedlists/-linked-list/has-duplicates.html","searchKeys":["hasDuplicates","final Boolean hasDuplicates()","linkedlists.LinkedList.hasDuplicates"]},{"name":"final Boolean hasIntersection()","description":"algorithmsinanutshell.IntersectionOfLines.hasIntersection","location":"algorithms/algorithmsinanutshell/-intersection-of-lines/has-intersection.html","searchKeys":["hasIntersection","final Boolean hasIntersection()","algorithmsinanutshell.IntersectionOfLines.hasIntersection"]},{"name":"final Boolean isConnectTo(Graph.Vertex v2)","description":"algorithmdesignmanualbook.graph.Graph.Vertex.isConnectTo","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-vertex/is-connect-to.html","searchKeys":["isConnectTo","final Boolean isConnectTo(Graph.Vertex v2)","algorithmdesignmanualbook.graph.Graph.Vertex.isConnectTo"]},{"name":"final Boolean isConnected(String v1, String v2)","description":"algorithmdesignmanualbook.graph.Graph.isConnected","location":"algorithms/algorithmdesignmanualbook.graph/-graph/is-connected.html","searchKeys":["isConnected","final Boolean isConnected(String v1, String v2)","algorithmdesignmanualbook.graph.Graph.isConnected"]},{"name":"final Boolean isDirected()","description":"algorithmsinanutshell.Relation.isDirected","location":"algorithms/algorithmsinanutshell/-relation/is-directed.html","searchKeys":["isDirected","final Boolean isDirected()","algorithmsinanutshell.Relation.isDirected"]},{"name":"final Boolean isIn(String value)","description":"algorithmdesignmanualbook.graph.Graph.isIn","location":"algorithms/algorithmdesignmanualbook.graph/-graph/is-in.html","searchKeys":["isIn","final Boolean isIn(String value)","algorithmdesignmanualbook.graph.Graph.isIn"]},{"name":"final Boolean isLeafNode()","description":"algorithmdesignmanualbook.datastructures.Node.isLeafNode","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/is-leaf-node.html","searchKeys":["isLeafNode","final Boolean isLeafNode()","algorithmdesignmanualbook.datastructures.Node.isLeafNode"]},{"name":"final Boolean isLeafNode(Node node)","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.isLeafNode","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/is-leaf-node.html","searchKeys":["isLeafNode","final Boolean isLeafNode(Node node)","algorithmdesignmanualbook.datastructures.BinarySearchTree.isLeafNode"]},{"name":"final Boolean isOneAway(String str1, String str2)","description":"arraysandstrings.OneAway.isOneAway","location":"algorithms/arraysandstrings/-one-away/is-one-away.html","searchKeys":["isOneAway","final Boolean isOneAway(String str1, String str2)","arraysandstrings.OneAway.isOneAway"]},{"name":"final Boolean isWeighted()","description":"algorithmsinanutshell.Relation.isWeighted","location":"algorithms/algorithmsinanutshell/-relation/is-weighted.html","searchKeys":["isWeighted","final Boolean isWeighted()","algorithmsinanutshell.Relation.isWeighted"]},{"name":"final Boolean search(Integer value)","description":"algorithmdesignmanualbook.datastructures.NoInitializationArray.search","location":"algorithms/algorithmdesignmanualbook.datastructures/-no-initialization-array/search.html","searchKeys":["search","final Boolean search(Integer value)","algorithmdesignmanualbook.datastructures.NoInitializationArray.search"]},{"name":"final Boolean validate()","description":"algorithmsinanutshell.networkflow.Network.validate","location":"algorithms/algorithmsinanutshell.networkflow/-network/validate.html","searchKeys":["validate","final Boolean validate()","algorithmsinanutshell.networkflow.Network.validate"]},{"name":"final Byte removeLastSetBit(Byte byte)","description":"algorithmdesignmanualbook.partialsum.PartialSumUsingFenwickTree.removeLastSetBit","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum-using-fenwick-tree/remove-last-set-bit.html","searchKeys":["removeLastSetBit","final Byte removeLastSetBit(Byte byte)","algorithmdesignmanualbook.partialsum.PartialSumUsingFenwickTree.removeLastSetBit"]},{"name":"final Character getName()","description":"algorithmsinanutshell.networkflow.Network.Vertex.getName","location":"algorithms/algorithmsinanutshell.networkflow/-network/-vertex/get-name.html","searchKeys":["getName","final Character getName()","algorithmsinanutshell.networkflow.Network.Vertex.getName"]},{"name":"final Collection<Graph.Vertex> getAllNodes()","description":"algorithmsinanutshell.Graph.getAllNodes","location":"algorithms/algorithmsinanutshell/-graph/get-all-nodes.html","searchKeys":["getAllNodes","final Collection<Graph.Vertex> getAllNodes()","algorithmsinanutshell.Graph.getAllNodes"]},{"name":"final Double angle(Point point)","description":"algorithmsinanutshell.Point.angle","location":"algorithms/algorithmsinanutshell/-point/angle.html","searchKeys":["angle","final Double angle(Point point)","algorithmsinanutshell.Point.angle"]},{"name":"final Double distanceFrom(Array<Integer> target)","description":"algorithmsinanutshell.spatialtree.MultiDimNode.distanceFrom","location":"algorithms/algorithmsinanutshell.spatialtree/-multi-dim-node/distance-from.html","searchKeys":["distanceFrom","final Double distanceFrom(Array<Integer> target)","algorithmsinanutshell.spatialtree.MultiDimNode.distanceFrom"]},{"name":"final Graph.State getState()","description":"algorithmdesignmanualbook.graph.Graph.Vertex.getState","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-vertex/get-state.html","searchKeys":["getState","final Graph.State getState()","algorithmdesignmanualbook.graph.Graph.Vertex.getState"]},{"name":"final Graph.State getState()","description":"algorithmsinanutshell.Graph.Vertex.getState","location":"algorithms/algorithmsinanutshell/-graph/-vertex/get-state.html","searchKeys":["getState","final Graph.State getState()","algorithmsinanutshell.Graph.Vertex.getState"]},{"name":"final Graph.Vertex add(Integer value)","description":"algorithmsinanutshell.Graph.add","location":"algorithms/algorithmsinanutshell/-graph/add.html","searchKeys":["add","final Graph.Vertex add(Integer value)","algorithmsinanutshell.Graph.add"]},{"name":"final Graph.Vertex addVertex(String value)","description":"algorithmdesignmanualbook.graph.Graph.addVertex","location":"algorithms/algorithmdesignmanualbook.graph/-graph/add-vertex.html","searchKeys":["addVertex","final Graph.Vertex addVertex(String value)","algorithmdesignmanualbook.graph.Graph.addVertex"]},{"name":"final Graph.Vertex getEndVertex()","description":"algorithmdesignmanualbook.graph.Graph.Edge.getEndVertex","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-edge/get-end-vertex.html","searchKeys":["getEndVertex","final Graph.Vertex getEndVertex()","algorithmdesignmanualbook.graph.Graph.Edge.getEndVertex"]},{"name":"final Graph.Vertex getEndVertex()","description":"algorithmsinanutshell.Graph.Edge.getEndVertex","location":"algorithms/algorithmsinanutshell/-graph/-edge/get-end-vertex.html","searchKeys":["getEndVertex","final Graph.Vertex getEndVertex()","algorithmsinanutshell.Graph.Edge.getEndVertex"]},{"name":"final Graph.Vertex getRandomVertex()","description":"algorithmdesignmanualbook.graph.Graph.getRandomVertex","location":"algorithms/algorithmdesignmanualbook.graph/-graph/get-random-vertex.html","searchKeys":["getRandomVertex","final Graph.Vertex getRandomVertex()","algorithmdesignmanualbook.graph.Graph.getRandomVertex"]},{"name":"final Graph.Vertex getStartVertex()","description":"algorithmdesignmanualbook.graph.Graph.Edge.getStartVertex","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-edge/get-start-vertex.html","searchKeys":["getStartVertex","final Graph.Vertex getStartVertex()","algorithmdesignmanualbook.graph.Graph.Edge.getStartVertex"]},{"name":"final Graph.Vertex getStartVertex()","description":"algorithmsinanutshell.Graph.Edge.getStartVertex","location":"algorithms/algorithmsinanutshell/-graph/-edge/get-start-vertex.html","searchKeys":["getStartVertex","final Graph.Vertex getStartVertex()","algorithmsinanutshell.Graph.Edge.getStartVertex"]},{"name":"final Graph.Vertex getVertex(String str)","description":"algorithmdesignmanualbook.graph.Graph.getVertex","location":"algorithms/algorithmdesignmanualbook.graph/-graph/get-vertex.html","searchKeys":["getVertex","final Graph.Vertex getVertex(String str)","algorithmdesignmanualbook.graph.Graph.getVertex"]},{"name":"final Graph createUnweightedUndirectedGraph()","description":"algorithmsinanutshell.Graph.Companion.createUnweightedUndirectedGraph","location":"algorithms/algorithmsinanutshell/-graph/-companion/create-unweighted-undirected-graph.html","searchKeys":["createUnweightedUndirectedGraph","final Graph createUnweightedUndirectedGraph()","algorithmsinanutshell.Graph.Companion.createUnweightedUndirectedGraph"]},{"name":"final Graph createWeightedDirectedGraph()","description":"algorithmsinanutshell.Graph.Companion.createWeightedDirectedGraph","location":"algorithms/algorithmsinanutshell/-graph/-companion/create-weighted-directed-graph.html","searchKeys":["createWeightedDirectedGraph","final Graph createWeightedDirectedGraph()","algorithmsinanutshell.Graph.Companion.createWeightedDirectedGraph"]},{"name":"final Graph getDefaultDirected()","description":"algorithmdesignmanualbook.graph.Graph.Companion.getDefaultDirected","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-companion/get-default-directed.html","searchKeys":["getDefaultDirected","final Graph getDefaultDirected()","algorithmdesignmanualbook.graph.Graph.Companion.getDefaultDirected"]},{"name":"final Graph getDefaultUnDirected()","description":"algorithmdesignmanualbook.graph.Graph.Companion.getDefaultUnDirected","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-companion/get-default-un-directed.html","searchKeys":["getDefaultUnDirected","final Graph getDefaultUnDirected()","algorithmdesignmanualbook.graph.Graph.Companion.getDefaultUnDirected"]},{"name":"final Graph getGraph()","description":"algorithmsinanutshell.DijkstraAlgorithm.getGraph","location":"algorithms/algorithmsinanutshell/-dijkstra-algorithm/get-graph.html","searchKeys":["getGraph","final Graph getGraph()","algorithmsinanutshell.DijkstraAlgorithm.getGraph"]},{"name":"final Graph getGraph()","description":"algorithmsinanutshell.FloydWarshallAlgorithm.getGraph","location":"algorithms/algorithmsinanutshell/-floyd-warshall-algorithm/get-graph.html","searchKeys":["getGraph","final Graph getGraph()","algorithmsinanutshell.FloydWarshallAlgorithm.getGraph"]},{"name":"final Graph getGraph()","description":"algorithmsinanutshell.PrimMinSpanningTreeAlgorithm.getGraph","location":"algorithms/algorithmsinanutshell/-prim-min-spanning-tree-algorithm/get-graph.html","searchKeys":["getGraph","final Graph getGraph()","algorithmsinanutshell.PrimMinSpanningTreeAlgorithm.getGraph"]},{"name":"final IntArray getProfits()","description":"algorithmsinanutshell.spatialtree.KnapSack01.getProfits","location":"algorithms/algorithmsinanutshell.spatialtree/-knap-sack01/get-profits.html","searchKeys":["getProfits","final IntArray getProfits()","algorithmsinanutshell.spatialtree.KnapSack01.getProfits"]},{"name":"final IntArray getWeights()","description":"algorithmsinanutshell.spatialtree.KnapSack01.getWeights","location":"algorithms/algorithmsinanutshell.spatialtree/-knap-sack01/get-weights.html","searchKeys":["getWeights","final IntArray getWeights()","algorithmsinanutshell.spatialtree.KnapSack01.getWeights"]},{"name":"final Integer calculateMaxFlow()","description":"algorithmsinanutshell.networkflow.FordFulkersonAlgorithm.calculateMaxFlow","location":"algorithms/algorithmsinanutshell.networkflow/-ford-fulkerson-algorithm/calculate-max-flow.html","searchKeys":["calculateMaxFlow","final Integer calculateMaxFlow()","algorithmsinanutshell.networkflow.FordFulkersonAlgorithm.calculateMaxFlow"]},{"name":"final Integer cumulativeValueAt(Integer index)","description":"algorithmdesignmanualbook.partialsum.PartialSum.cumulativeValueAt","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum/cumulative-value-at.html","searchKeys":["cumulativeValueAt","final Integer cumulativeValueAt(Integer index)","algorithmdesignmanualbook.partialsum.PartialSum.cumulativeValueAt"]},{"name":"final Integer getCapacity()","description":"algorithmsinanutshell.networkflow.Network.Edge.getCapacity","location":"algorithms/algorithmsinanutshell.networkflow/-network/-edge/get-capacity.html","searchKeys":["getCapacity","final Integer getCapacity()","algorithmsinanutshell.networkflow.Network.Edge.getCapacity"]},{"name":"final Integer getDest()","description":"algorithmdesignmanualbook.graph.SimpleGraph.Edge.getDest","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/-edge/get-dest.html","searchKeys":["getDest","final Integer getDest()","algorithmdesignmanualbook.graph.SimpleGraph.Edge.getDest"]},{"name":"final Integer getEdgesCount()","description":"algorithmdesignmanualbook.graph.SimpleGraph.getEdgesCount","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/get-edges-count.html","searchKeys":["getEdgesCount","final Integer getEdgesCount()","algorithmdesignmanualbook.graph.SimpleGraph.getEdgesCount"]},{"name":"final Integer getFlow()","description":"algorithmsinanutshell.networkflow.Network.Edge.getFlow","location":"algorithms/algorithmsinanutshell.networkflow/-network/-edge/get-flow.html","searchKeys":["getFlow","final Integer getFlow()","algorithmsinanutshell.networkflow.Network.Edge.getFlow"]},{"name":"final Integer getMaxSize()","description":"algorithmdesignmanualbook.datastructures.NoInitializationArray.getMaxSize","location":"algorithms/algorithmdesignmanualbook.datastructures/-no-initialization-array/get-max-size.html","searchKeys":["getMaxSize","final Integer getMaxSize()","algorithmdesignmanualbook.datastructures.NoInitializationArray.getMaxSize"]},{"name":"final Integer getMaxValue()","description":"algorithmdesignmanualbook.datastructures.NoInitializationArray.getMaxValue","location":"algorithms/algorithmdesignmanualbook.datastructures/-no-initialization-array/get-max-value.html","searchKeys":["getMaxValue","final Integer getMaxValue()","algorithmdesignmanualbook.datastructures.NoInitializationArray.getMaxValue"]},{"name":"final Integer getOrdinal()","description":"algorithmdesignmanualbook.graph.Graph.State.getOrdinal","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-state/get-ordinal.html","searchKeys":["getOrdinal","final Integer getOrdinal()","algorithmdesignmanualbook.graph.Graph.State.getOrdinal"]},{"name":"final Integer getOrdinal()","description":"algorithmsinanutshell.Graph.State.getOrdinal","location":"algorithms/algorithmsinanutshell/-graph/-state/get-ordinal.html","searchKeys":["getOrdinal","final Integer getOrdinal()","algorithmsinanutshell.Graph.State.getOrdinal"]},{"name":"final Integer getOrdinal()","description":"algorithmsinanutshell.Orientation.getOrdinal","location":"algorithms/algorithmsinanutshell/-orientation/get-ordinal.html","searchKeys":["getOrdinal","final Integer getOrdinal()","algorithmsinanutshell.Orientation.getOrdinal"]},{"name":"final Integer getOrdinal()","description":"algorithmsinanutshell.Relation.getOrdinal","location":"algorithms/algorithmsinanutshell/-relation/get-ordinal.html","searchKeys":["getOrdinal","final Integer getOrdinal()","algorithmsinanutshell.Relation.getOrdinal"]},{"name":"final Integer getRandomOrNull()","description":"algorithmdesignmanualbook.datastructures.O1DataStructure.getRandomOrNull","location":"algorithms/algorithmdesignmanualbook.datastructures/-o1-data-structure/get-random-or-null.html","searchKeys":["getRandomOrNull","final Integer getRandomOrNull()","algorithmdesignmanualbook.datastructures.O1DataStructure.getRandomOrNull"]},{"name":"final Integer getSrc()","description":"algorithmdesignmanualbook.graph.SimpleGraph.Edge.getSrc","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/-edge/get-src.html","searchKeys":["getSrc","final Integer getSrc()","algorithmdesignmanualbook.graph.SimpleGraph.Edge.getSrc"]},{"name":"final Integer getSum(Integer index)","description":"algorithmdesignmanualbook.partialsum.PartialSumUsingFenwickTree.getSum","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum-using-fenwick-tree/get-sum.html","searchKeys":["getSum","final Integer getSum(Integer index)","algorithmdesignmanualbook.partialsum.PartialSumUsingFenwickTree.getSum"]},{"name":"final Integer getTotalCapacity()","description":"algorithmsinanutshell.spatialtree.KnapSack01.getTotalCapacity","location":"algorithms/algorithmsinanutshell.spatialtree/-knap-sack01/get-total-capacity.html","searchKeys":["getTotalCapacity","final Integer getTotalCapacity()","algorithmsinanutshell.spatialtree.KnapSack01.getTotalCapacity"]},{"name":"final Integer getValue()","description":"algorithmdesignmanualbook.datastructures.LinkedListNode.getValue","location":"algorithms/algorithmdesignmanualbook.datastructures/-linked-list-node/get-value.html","searchKeys":["getValue","final Integer getValue()","algorithmdesignmanualbook.datastructures.LinkedListNode.getValue"]},{"name":"final Integer getValue()","description":"algorithmdesignmanualbook.datastructures.Node.getValue","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/get-value.html","searchKeys":["getValue","final Integer getValue()","algorithmdesignmanualbook.datastructures.Node.getValue"]},{"name":"final Integer getValue()","description":"algorithmsinanutshell.AVLTree.Node.getValue","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/-node/get-value.html","searchKeys":["getValue","final Integer getValue()","algorithmsinanutshell.AVLTree.Node.getValue"]},{"name":"final Integer getValue()","description":"algorithmsinanutshell.AVLTree.getValue","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/get-value.html","searchKeys":["getValue","final Integer getValue()","algorithmsinanutshell.AVLTree.getValue"]},{"name":"final Integer getValue()","description":"algorithmsinanutshell.Graph.Vertex.getValue","location":"algorithms/algorithmsinanutshell/-graph/-vertex/get-value.html","searchKeys":["getValue","final Integer getValue()","algorithmsinanutshell.Graph.Vertex.getValue"]},{"name":"final Integer getValue()","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getValue","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/get-value.html","searchKeys":["getValue","final Integer getValue()","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getValue"]},{"name":"final Integer getValue()","description":"linkedlists.Node.getValue","location":"algorithms/linkedlists/-node/get-value.html","searchKeys":["getValue","final Integer getValue()","linkedlists.Node.getValue"]},{"name":"final Integer getVertexCount()","description":"algorithmdesignmanualbook.graph.SimpleGraph.getVertexCount","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/get-vertex-count.html","searchKeys":["getVertexCount","final Integer getVertexCount()","algorithmdesignmanualbook.graph.SimpleGraph.getVertexCount"]},{"name":"final Integer getVertexCount()","description":"algorithmsinanutshell.Graph.getVertexCount","location":"algorithms/algorithmsinanutshell/-graph/get-vertex-count.html","searchKeys":["getVertexCount","final Integer getVertexCount()","algorithmsinanutshell.Graph.getVertexCount"]},{"name":"final Integer getWeight()","description":"algorithmdesignmanualbook.graph.Graph.Edge.getWeight","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-edge/get-weight.html","searchKeys":["getWeight","final Integer getWeight()","algorithmdesignmanualbook.graph.Graph.Edge.getWeight"]},{"name":"final Integer getWeight()","description":"algorithmdesignmanualbook.graph.SimpleGraph.Edge.getWeight","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/-edge/get-weight.html","searchKeys":["getWeight","final Integer getWeight()","algorithmdesignmanualbook.graph.SimpleGraph.Edge.getWeight"]},{"name":"final Integer getWeight()","description":"algorithmsinanutshell.Graph.Edge.getWeight","location":"algorithms/algorithmsinanutshell/-graph/-edge/get-weight.html","searchKeys":["getWeight","final Integer getWeight()","algorithmsinanutshell.Graph.Edge.getWeight"]},{"name":"final Integer getX()","description":"algorithmsinanutshell.Point.getX","location":"algorithms/algorithmsinanutshell/-point/get-x.html","searchKeys":["getX","final Integer getX()","algorithmsinanutshell.Point.getX"]},{"name":"final Integer getX()","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getX","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/get-x.html","searchKeys":["getX","final Integer getX()","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getX"]},{"name":"final Integer getY()","description":"algorithmsinanutshell.Point.getY","location":"algorithms/algorithmsinanutshell/-point/get-y.html","searchKeys":["getY","final Integer getY()","algorithmsinanutshell.Point.getY"]},{"name":"final Integer getY()","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getY","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/get-y.html","searchKeys":["getY","final Integer getY()","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getY"]},{"name":"final Integer height()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.height","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/height.html","searchKeys":["height","final Integer height()","algorithmdesignmanualbook.datastructures.BinarySearchTree.height"]},{"name":"final Integer max()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.max","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/max.html","searchKeys":["max","final Integer max()","algorithmdesignmanualbook.datastructures.BinarySearchTree.max"]},{"name":"final Integer min()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.min","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/min.html","searchKeys":["min","final Integer min()","algorithmdesignmanualbook.datastructures.BinarySearchTree.min"]},{"name":"final Integer minCost()","description":"algorithmsinanutshell.PrimMinSpanningTreeAlgorithm.minCost","location":"algorithms/algorithmsinanutshell/-prim-min-spanning-tree-algorithm/min-cost.html","searchKeys":["minCost","final Integer minCost()","algorithmsinanutshell.PrimMinSpanningTreeAlgorithm.minCost"]},{"name":"final Integer partialSum(Integer index)","description":"algorithmdesignmanualbook.partialsum.PartialSum.partialSum","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum/partial-sum.html","searchKeys":["partialSum","final Integer partialSum(Integer index)","algorithmdesignmanualbook.partialsum.PartialSum.partialSum"]},{"name":"final Integer peekMinValue()","description":"algorithmdesignmanualbook.sorting.HeapSort.peekMinValue","location":"algorithms/algorithmdesignmanualbook.sorting/-heap-sort/peek-min-value.html","searchKeys":["peekMinValue","final Integer peekMinValue()","algorithmdesignmanualbook.sorting.HeapSort.peekMinValue"]},{"name":"final Line getL1()","description":"algorithmsinanutshell.IntersectionOfLines.getL1","location":"algorithms/algorithmsinanutshell/-intersection-of-lines/get-l1.html","searchKeys":["getL1","final Line getL1()","algorithmsinanutshell.IntersectionOfLines.getL1"]},{"name":"final Line getL2()","description":"algorithmsinanutshell.IntersectionOfLines.getL2","location":"algorithms/algorithmsinanutshell/-intersection-of-lines/get-l2.html","searchKeys":["getL2","final Line getL2()","algorithmsinanutshell.IntersectionOfLines.getL2"]},{"name":"final LinkedList<Integer> flatten()","description":"algorithmdesignmanualbook.datastructures.FlattenBSTIntoLinkedList.flatten","location":"algorithms/algorithmdesignmanualbook.datastructures/-flatten-b-s-t-into-linked-list/flatten.html","searchKeys":["flatten","final LinkedList<Integer> flatten()","algorithmdesignmanualbook.datastructures.FlattenBSTIntoLinkedList.flatten"]},{"name":"final LinkedListNode getNext()","description":"algorithmdesignmanualbook.datastructures.LinkedListNode.getNext","location":"algorithms/algorithmdesignmanualbook.datastructures/-linked-list-node/get-next.html","searchKeys":["getNext","final LinkedListNode getNext()","algorithmdesignmanualbook.datastructures.LinkedListNode.getNext"]},{"name":"final LinkedListNode reverse()","description":"algorithmdesignmanualbook.datastructures.LinkedListNode.reverse","location":"algorithms/algorithmdesignmanualbook.datastructures/-linked-list-node/reverse.html","searchKeys":["reverse","final LinkedListNode reverse()","algorithmdesignmanualbook.datastructures.LinkedListNode.reverse"]},{"name":"final LinkedList reverse()","description":"linkedlists.LinkedList.reverse","location":"algorithms/linkedlists/-linked-list/reverse.html","searchKeys":["reverse","final LinkedList reverse()","linkedlists.LinkedList.reverse"]},{"name":"final List<Graph.Edge> getEdges()","description":"algorithmsinanutshell.Graph.Vertex.getEdges","location":"algorithms/algorithmsinanutshell/-graph/-vertex/get-edges.html","searchKeys":["getEdges","final List<Graph.Edge> getEdges()","algorithmsinanutshell.Graph.Vertex.getEdges"]},{"name":"final List<Graph.Edge> result()","description":"algorithmsinanutshell.PrimMinSpanningTreeAlgorithm.result","location":"algorithms/algorithmsinanutshell/-prim-min-spanning-tree-algorithm/result.html","searchKeys":["result","final List<Graph.Edge> result()","algorithmsinanutshell.PrimMinSpanningTreeAlgorithm.result"]},{"name":"final List<Graph.Vertex> getNodes()","description":"algorithmsinanutshell.Graph.getNodes","location":"algorithms/algorithmsinanutshell/-graph/get-nodes.html","searchKeys":["getNodes","final List<Graph.Vertex> getNodes()","algorithmsinanutshell.Graph.getNodes"]},{"name":"final List<Graph.Vertex> getUnvisited()","description":"algorithmsinanutshell.Graph.getUnvisited","location":"algorithms/algorithmsinanutshell/-graph/get-unvisited.html","searchKeys":["getUnvisited","final List<Graph.Vertex> getUnvisited()","algorithmsinanutshell.Graph.getUnvisited"]},{"name":"final List<Integer> asList()","description":"algorithmdesignmanualbook.datastructures.O1DataStructure.asList","location":"algorithms/algorithmdesignmanualbook.datastructures/-o1-data-structure/as-list.html","searchKeys":["asList","final List<Integer> asList()","algorithmdesignmanualbook.datastructures.O1DataStructure.asList"]},{"name":"final List<Integer> getSelectedWeight()","description":"algorithmsinanutshell.spatialtree.KnapSack01.getSelectedWeight","location":"algorithms/algorithmsinanutshell.spatialtree/-knap-sack01/get-selected-weight.html","searchKeys":["getSelectedWeight","final List<Integer> getSelectedWeight()","algorithmsinanutshell.spatialtree.KnapSack01.getSelectedWeight"]},{"name":"final List<Integer> run()","description":"algorithmdesignmanualbook.sorting.BucketSort.run","location":"algorithms/algorithmdesignmanualbook.sorting/-bucket-sort/run.html","searchKeys":["run","final List<Integer> run()","algorithmdesignmanualbook.sorting.BucketSort.run"]},{"name":"final List<List<Integer>> execute()","description":"algorithmdesignmanualbook.heuristics.backtrack.AllSubsets.execute","location":"algorithms/algorithmdesignmanualbook.heuristics.backtrack/-all-subsets/execute.html","searchKeys":["execute","final List<List<Integer>> execute()","algorithmdesignmanualbook.heuristics.backtrack.AllSubsets.execute"]},{"name":"final List<Network.Edge> getEdges()","description":"algorithmsinanutshell.networkflow.Network.Vertex.getEdges","location":"algorithms/algorithmsinanutshell.networkflow/-network/-vertex/get-edges.html","searchKeys":["getEdges","final List<Network.Edge> getEdges()","algorithmsinanutshell.networkflow.Network.Vertex.getEdges"]},{"name":"final List<Network.Vertex> getVertices()","description":"algorithmsinanutshell.networkflow.Network.getVertices","location":"algorithms/algorithmsinanutshell.networkflow/-network/get-vertices.html","searchKeys":["getVertices","final List<Network.Vertex> getVertices()","algorithmsinanutshell.networkflow.Network.getVertices"]},{"name":"final List<Node> subListFrom(Integer beginIndex)","description":"linkedlists.LinkedList.subListFrom","location":"algorithms/linkedlists/-linked-list/sub-list-from.html","searchKeys":["subListFrom","final List<Node> subListFrom(Integer beginIndex)","linkedlists.LinkedList.subListFrom"]},{"name":"final List<QuadTree.QuadNode> rangeQuery(Integer xmin, Integer ymin, Integer xmax, Integer ymax)","description":"algorithmsinanutshell.spatialtree.QuadTree.rangeQuery","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/range-query.html","searchKeys":["rangeQuery","final List<QuadTree.QuadNode> rangeQuery(Integer xmin, Integer ymin, Integer xmax, Integer ymax)","algorithmsinanutshell.spatialtree.QuadTree.rangeQuery"]},{"name":"final List<String> execute()","description":"algorithmdesignmanualbook.heuristics.backtrack.Permutation.execute","location":"algorithms/algorithmdesignmanualbook.heuristics.backtrack/-permutation/execute.html","searchKeys":["execute","final List<String> execute()","algorithmdesignmanualbook.heuristics.backtrack.Permutation.execute"]},{"name":"final List<String> getResult()","description":"algorithmdesignmanualbook.heuristics.backtrack.Permutation.getResult","location":"algorithms/algorithmdesignmanualbook.heuristics.backtrack/-permutation/get-result.html","searchKeys":["getResult","final List<String> getResult()","algorithmdesignmanualbook.heuristics.backtrack.Permutation.getResult"]},{"name":"final Map<Line, Set<Line>> execute()","description":"algorithmsinanutshell.LineSweepAlgorithm.execute","location":"algorithms/algorithmsinanutshell/-line-sweep-algorithm/execute.html","searchKeys":["execute","final Map<Line, Set<Line>> execute()","algorithmsinanutshell.LineSweepAlgorithm.execute"]},{"name":"final Map<String, Graph.Vertex> getVertices()","description":"algorithmdesignmanualbook.graph.Graph.getVertices","location":"algorithms/algorithmdesignmanualbook.graph/-graph/get-vertices.html","searchKeys":["getVertices","final Map<String, Graph.Vertex> getVertices()","algorithmdesignmanualbook.graph.Graph.getVertices"]},{"name":"final MultiDimNode execute(Array<Integer> target)","description":"algorithmsinanutshell.spatialtree.NearestNeighbourQueries.execute","location":"algorithms/algorithmsinanutshell.spatialtree/-nearest-neighbour-queries/execute.html","searchKeys":["execute","final MultiDimNode execute(Array<Integer> target)","algorithmsinanutshell.spatialtree.NearestNeighbourQueries.execute"]},{"name":"final MultiDimNode getLeft()","description":"algorithmsinanutshell.spatialtree.MultiDimNode.getLeft","location":"algorithms/algorithmsinanutshell.spatialtree/-multi-dim-node/get-left.html","searchKeys":["getLeft","final MultiDimNode getLeft()","algorithmsinanutshell.spatialtree.MultiDimNode.getLeft"]},{"name":"final MultiDimNode getRight()","description":"algorithmsinanutshell.spatialtree.MultiDimNode.getRight","location":"algorithms/algorithmsinanutshell.spatialtree/-multi-dim-node/get-right.html","searchKeys":["getRight","final MultiDimNode getRight()","algorithmsinanutshell.spatialtree.MultiDimNode.getRight"]},{"name":"final MultiDimNode getTree()","description":"algorithmsinanutshell.spatialtree.KDTree.getTree","location":"algorithms/algorithmsinanutshell.spatialtree/-k-d-tree/get-tree.html","searchKeys":["getTree","final MultiDimNode getTree()","algorithmsinanutshell.spatialtree.KDTree.getTree"]},{"name":"final Network.Vertex add(Character value)","description":"algorithmsinanutshell.networkflow.Network.add","location":"algorithms/algorithmsinanutshell.networkflow/-network/add.html","searchKeys":["add","final Network.Vertex add(Character value)","algorithmsinanutshell.networkflow.Network.add"]},{"name":"final Network.Vertex getEnd()","description":"algorithmsinanutshell.networkflow.Network.Edge.getEnd","location":"algorithms/algorithmsinanutshell.networkflow/-network/-edge/get-end.html","searchKeys":["getEnd","final Network.Vertex getEnd()","algorithmsinanutshell.networkflow.Network.Edge.getEnd"]},{"name":"final Network.Vertex getSink()","description":"algorithmsinanutshell.networkflow.Network.getSink","location":"algorithms/algorithmsinanutshell.networkflow/-network/get-sink.html","searchKeys":["getSink","final Network.Vertex getSink()","algorithmsinanutshell.networkflow.Network.getSink"]},{"name":"final Network.Vertex getSource()","description":"algorithmsinanutshell.networkflow.Network.getSource","location":"algorithms/algorithmsinanutshell.networkflow/-network/get-source.html","searchKeys":["getSource","final Network.Vertex getSource()","algorithmsinanutshell.networkflow.Network.getSource"]},{"name":"final Network.Vertex getStart()","description":"algorithmsinanutshell.networkflow.Network.Edge.getStart","location":"algorithms/algorithmsinanutshell.networkflow/-network/-edge/get-start.html","searchKeys":["getStart","final Network.Vertex getStart()","algorithmsinanutshell.networkflow.Network.Edge.getStart"]},{"name":"final Node create(Integer value)","description":"algorithmdesignmanualbook.datastructures.Node.Companion.create","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/-companion/create.html","searchKeys":["create","final Node create(Integer value)","algorithmdesignmanualbook.datastructures.Node.Companion.create"]},{"name":"final Node deleteAt(Integer index)","description":"linkedlists.LinkedList.deleteAt","location":"algorithms/linkedlists/-linked-list/delete-at.html","searchKeys":["deleteAt","final Node deleteAt(Integer index)","linkedlists.LinkedList.deleteAt"]},{"name":"final Node findMinFrom(Node node)","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.findMinFrom","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/find-min-from.html","searchKeys":["findMinFrom","final Node findMinFrom(Node node)","algorithmdesignmanualbook.datastructures.BinarySearchTree.findMinFrom"]},{"name":"final Node findOrNull(Integer value)","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.findOrNull","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/find-or-null.html","searchKeys":["findOrNull","final Node findOrNull(Integer value)","algorithmdesignmanualbook.datastructures.BinarySearchTree.findOrNull"]},{"name":"final Node getLeft()","description":"algorithmdesignmanualbook.datastructures.Node.getLeft","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/get-left.html","searchKeys":["getLeft","final Node getLeft()","algorithmdesignmanualbook.datastructures.Node.getLeft"]},{"name":"final Node getNext()","description":"linkedlists.Node.getNext","location":"algorithms/linkedlists/-node/get-next.html","searchKeys":["getNext","final Node getNext()","linkedlists.Node.getNext"]},{"name":"final Node getNode()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.getNode","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/get-node.html","searchKeys":["getNode","final Node getNode()","algorithmdesignmanualbook.datastructures.BinarySearchTree.getNode"]},{"name":"final Node getNode()","description":"linkedlists.LinkedList.getNode","location":"algorithms/linkedlists/-linked-list/get-node.html","searchKeys":["getNode","final Node getNode()","linkedlists.LinkedList.getNode"]},{"name":"final Node getParent()","description":"algorithmdesignmanualbook.datastructures.Node.getParent","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/get-parent.html","searchKeys":["getParent","final Node getParent()","algorithmdesignmanualbook.datastructures.Node.getParent"]},{"name":"final Node getRight()","description":"algorithmdesignmanualbook.datastructures.Node.getRight","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/get-right.html","searchKeys":["getRight","final Node getRight()","algorithmdesignmanualbook.datastructures.Node.getRight"]},{"name":"final Node getRoot()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.getRoot","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/get-root.html","searchKeys":["getRoot","final Node getRoot()","algorithmdesignmanualbook.datastructures.BinarySearchTree.getRoot"]},{"name":"final Node nodeAt(Integer index)","description":"linkedlists.LinkedList.nodeAt","location":"algorithms/linkedlists/-linked-list/node-at.html","searchKeys":["nodeAt","final Node nodeAt(Integer index)","linkedlists.LinkedList.nodeAt"]},{"name":"final Node parentOfFirstValue(Integer value)","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.parentOfFirstValue","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/parent-of-first-value.html","searchKeys":["parentOfFirstValue","final Node parentOfFirstValue(Integer value)","algorithmdesignmanualbook.datastructures.BinarySearchTree.parentOfFirstValue"]},{"name":"final Pair<String, Integer> execute()","description":"algorithmsinanutshell.DijkstraAlgorithm.execute","location":"algorithms/algorithmsinanutshell/-dijkstra-algorithm/execute.html","searchKeys":["execute","final Pair<String, Integer> execute()","algorithmsinanutshell.DijkstraAlgorithm.execute"]},{"name":"final Point getP1()","description":"algorithmsinanutshell.Line.getP1","location":"algorithms/algorithmsinanutshell/-line/get-p1.html","searchKeys":["getP1","final Point getP1()","algorithmsinanutshell.Line.getP1"]},{"name":"final Point getP2()","description":"algorithmsinanutshell.Line.getP2","location":"algorithms/algorithmsinanutshell/-line/get-p2.html","searchKeys":["getP2","final Point getP2()","algorithmsinanutshell.Line.getP2"]},{"name":"final Point getPoint()","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getPoint","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/get-point.html","searchKeys":["getPoint","final Point getPoint()","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getPoint"]},{"name":"final PrimMinSpanningTreeAlgorithm execute()","description":"algorithmsinanutshell.PrimMinSpanningTreeAlgorithm.execute","location":"algorithms/algorithmsinanutshell/-prim-min-spanning-tree-algorithm/execute.html","searchKeys":["execute","final PrimMinSpanningTreeAlgorithm execute()","algorithmsinanutshell.PrimMinSpanningTreeAlgorithm.execute"]},{"name":"final QuadTree.QuadNode getNe()","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getNe","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/get-ne.html","searchKeys":["getNe","final QuadTree.QuadNode getNe()","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getNe"]},{"name":"final QuadTree.QuadNode getNw()","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getNw","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/get-nw.html","searchKeys":["getNw","final QuadTree.QuadNode getNw()","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getNw"]},{"name":"final QuadTree.QuadNode getSe()","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getSe","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/get-se.html","searchKeys":["getSe","final QuadTree.QuadNode getSe()","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getSe"]},{"name":"final QuadTree.QuadNode getSw()","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getSw","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/get-sw.html","searchKeys":["getSw","final QuadTree.QuadNode getSw()","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.getSw"]},{"name":"final Relation getRelation()","description":"algorithmsinanutshell.Graph.getRelation","location":"algorithms/algorithmsinanutshell/-graph/get-relation.html","searchKeys":["getRelation","final Relation getRelation()","algorithmsinanutshell.Graph.getRelation"]},{"name":"final Set<Graph.Edge> getEdges()","description":"algorithmdesignmanualbook.graph.Graph.Vertex.getEdges","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-vertex/get-edges.html","searchKeys":["getEdges","final Set<Graph.Edge> getEdges()","algorithmdesignmanualbook.graph.Graph.Vertex.getEdges"]},{"name":"final Stack<Point> execute()","description":"algorithmsinanutshell.ConvexHullScanUsingGrahamScan.execute","location":"algorithms/algorithmsinanutshell/-convex-hull-scan-using-graham-scan/execute.html","searchKeys":["execute","final Stack<Point> execute()","algorithmsinanutshell.ConvexHullScanUsingGrahamScan.execute"]},{"name":"final String createSymbol(Integer weight)","description":"algorithmsinanutshell.Relation.createSymbol","location":"algorithms/algorithmsinanutshell/-relation/create-symbol.html","searchKeys":["createSymbol","final String createSymbol(Integer weight)","algorithmsinanutshell.Relation.createSymbol"]},{"name":"final String getName()","description":"algorithmdesignmanualbook.graph.Graph.State.getName","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-state/get-name.html","searchKeys":["getName","final String getName()","algorithmdesignmanualbook.graph.Graph.State.getName"]},{"name":"final String getName()","description":"algorithmsinanutshell.Graph.State.getName","location":"algorithms/algorithmsinanutshell/-graph/-state/get-name.html","searchKeys":["getName","final String getName()","algorithmsinanutshell.Graph.State.getName"]},{"name":"final String getName()","description":"algorithmsinanutshell.Orientation.getName","location":"algorithms/algorithmsinanutshell/-orientation/get-name.html","searchKeys":["getName","final String getName()","algorithmsinanutshell.Orientation.getName"]},{"name":"final String getName()","description":"algorithmsinanutshell.Relation.getName","location":"algorithms/algorithmsinanutshell/-relation/get-name.html","searchKeys":["getName","final String getName()","algorithmsinanutshell.Relation.getName"]},{"name":"final String getStr()","description":"algorithmdesignmanualbook.heuristics.backtrack.Permutation.getStr","location":"algorithms/algorithmdesignmanualbook.heuristics.backtrack/-permutation/get-str.html","searchKeys":["getStr","final String getStr()","algorithmdesignmanualbook.heuristics.backtrack.Permutation.getStr"]},{"name":"final String getSymbol()","description":"algorithmsinanutshell.Relation.getSymbol","location":"algorithms/algorithmsinanutshell/-relation/get-symbol.html","searchKeys":["getSymbol","final String getSymbol()","algorithmsinanutshell.Relation.getSymbol"]},{"name":"final String getValue()","description":"algorithmdesignmanualbook.graph.Graph.Vertex.getValue","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-vertex/get-value.html","searchKeys":["getValue","final String getValue()","algorithmdesignmanualbook.graph.Graph.Vertex.getValue"]},{"name":"final Unit add(Integer element)","description":"algorithmdesignmanualbook.sorting.HeapSort.add","location":"algorithms/algorithmdesignmanualbook.sorting/-heap-sort/add.html","searchKeys":["add","final Unit add(Integer element)","algorithmdesignmanualbook.sorting.HeapSort.add"]},{"name":"final Unit add(Integer index, Integer value)","description":"algorithmdesignmanualbook.partialsum.PartialSum.add","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum/add.html","searchKeys":["add","final Unit add(Integer index, Integer value)","algorithmdesignmanualbook.partialsum.PartialSum.add"]},{"name":"final Unit add(Integer value)","description":"algorithmdesignmanualbook.datastructures.LinkedListNode.add","location":"algorithms/algorithmdesignmanualbook.datastructures/-linked-list-node/add.html","searchKeys":["add","final Unit add(Integer value)","algorithmdesignmanualbook.datastructures.LinkedListNode.add"]},{"name":"final Unit add(Integer value)","description":"algorithmdesignmanualbook.datastructures.NoInitializationArray.add","location":"algorithms/algorithmdesignmanualbook.datastructures/-no-initialization-array/add.html","searchKeys":["add","final Unit add(Integer value)","algorithmdesignmanualbook.datastructures.NoInitializationArray.add"]},{"name":"final Unit add(Integer value)","description":"algorithmdesignmanualbook.datastructures.O1DataStructure.add","location":"algorithms/algorithmdesignmanualbook.datastructures/-o1-data-structure/add.html","searchKeys":["add","final Unit add(Integer value)","algorithmdesignmanualbook.datastructures.O1DataStructure.add"]},{"name":"final Unit add(Integer value)","description":"algorithmsinanutshell.AVLTree.add","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/add.html","searchKeys":["add","final Unit add(Integer value)","algorithmsinanutshell.AVLTree.add"]},{"name":"final Unit addEdge(Graph.Vertex vertex, Integer weight)","description":"algorithmdesignmanualbook.graph.Graph.Vertex.addEdge","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-vertex/add-edge.html","searchKeys":["addEdge","final Unit addEdge(Graph.Vertex vertex, Integer weight)","algorithmdesignmanualbook.graph.Graph.Vertex.addEdge"]},{"name":"final Unit addLast(Node newNode)","description":"linkedlists.LinkedList.addLast","location":"algorithms/linkedlists/-linked-list/add-last.html","searchKeys":["addLast","final Unit addLast(Node newNode)","linkedlists.LinkedList.addLast"]},{"name":"final Unit connect(Network.Vertex end, Integer capacity)","description":"algorithmsinanutshell.networkflow.Network.Vertex.connect","location":"algorithms/algorithmsinanutshell.networkflow/-network/-vertex/connect.html","searchKeys":["connect","final Unit connect(Network.Vertex end, Integer capacity)","algorithmsinanutshell.networkflow.Network.Vertex.connect"]},{"name":"final Unit connectWith(Graph.Vertex vertex, Integer weight, Boolean readd)","description":"algorithmsinanutshell.Graph.Vertex.connectWith","location":"algorithms/algorithmsinanutshell/-graph/-vertex/connect-with.html","searchKeys":["connectWith","final Unit connectWith(Graph.Vertex vertex, Integer weight, Boolean readd)","algorithmsinanutshell.Graph.Vertex.connectWith"]},{"name":"final Unit delete(Integer value)","description":"algorithmdesignmanualbook.datastructures.NoInitializationArray.delete","location":"algorithms/algorithmdesignmanualbook.datastructures/-no-initialization-array/delete.html","searchKeys":["delete","final Unit delete(Integer value)","algorithmdesignmanualbook.datastructures.NoInitializationArray.delete"]},{"name":"final Unit deleteKthSmallestElement(Integer k)","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.deleteKthSmallestElement","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/delete-kth-smallest-element.html","searchKeys":["deleteKthSmallestElement","final Unit deleteKthSmallestElement(Integer k)","algorithmdesignmanualbook.datastructures.BinarySearchTree.deleteKthSmallestElement"]},{"name":"final Unit deleteMin()","description":"algorithmdesignmanualbook.sorting.HeapSort.deleteMin","location":"algorithms/algorithmdesignmanualbook.sorting/-heap-sort/delete-min.html","searchKeys":["deleteMin","final Unit deleteMin()","algorithmdesignmanualbook.sorting.HeapSort.deleteMin"]},{"name":"final Unit execute()","description":"algorithmsinanutshell.FloydWarshallAlgorithm.execute","location":"algorithms/algorithmsinanutshell/-floyd-warshall-algorithm/execute.html","searchKeys":["execute","final Unit execute()","algorithmsinanutshell.FloydWarshallAlgorithm.execute"]},{"name":"final Unit insert(Array<Integer> newValue, Integer height)","description":"algorithmsinanutshell.spatialtree.MultiDimNode.insert","location":"algorithms/algorithmsinanutshell.spatialtree/-multi-dim-node/insert.html","searchKeys":["insert","final Unit insert(Array<Integer> newValue, Integer height)","algorithmsinanutshell.spatialtree.MultiDimNode.insert"]},{"name":"final Unit insert(Integer x, Integer y, Integer value)","description":"algorithmsinanutshell.spatialtree.QuadTree.insert","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/insert.html","searchKeys":["insert","final Unit insert(Integer x, Integer y, Integer value)","algorithmsinanutshell.spatialtree.QuadTree.insert"]},{"name":"final Unit join(Graph.Vertex v1, Graph.Vertex v2, Integer weight)","description":"algorithmdesignmanualbook.graph.Graph.join","location":"algorithms/algorithmdesignmanualbook.graph/-graph/join.html","searchKeys":["join","final Unit join(Graph.Vertex v1, Graph.Vertex v2, Integer weight)","algorithmdesignmanualbook.graph.Graph.join"]},{"name":"final Unit join(String value1, String value2, Integer weight)","description":"algorithmdesignmanualbook.graph.Graph.join","location":"algorithms/algorithmdesignmanualbook.graph/-graph/join.html","searchKeys":["join","final Unit join(String value1, String value2, Integer weight)","algorithmdesignmanualbook.graph.Graph.join"]},{"name":"final Unit print()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.print","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/print.html","searchKeys":["print","final Unit print()","algorithmdesignmanualbook.datastructures.BinarySearchTree.print"]},{"name":"final Unit print()","description":"algorithmdesignmanualbook.datastructures.LinkedListNode.print","location":"algorithms/algorithmdesignmanualbook.datastructures/-linked-list-node/print.html","searchKeys":["print","final Unit print()","algorithmdesignmanualbook.datastructures.LinkedListNode.print"]},{"name":"final Unit print()","description":"algorithmdesignmanualbook.datastructures.NoInitializationArray.print","location":"algorithms/algorithmdesignmanualbook.datastructures/-no-initialization-array/print.html","searchKeys":["print","final Unit print()","algorithmdesignmanualbook.datastructures.NoInitializationArray.print"]},{"name":"final Unit print()","description":"algorithmdesignmanualbook.datastructures.O1DataStructure.print","location":"algorithms/algorithmdesignmanualbook.datastructures/-o1-data-structure/print.html","searchKeys":["print","final Unit print()","algorithmdesignmanualbook.datastructures.O1DataStructure.print"]},{"name":"final Unit print()","description":"algorithmdesignmanualbook.partialsum.PartialSum.print","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum/print.html","searchKeys":["print","final Unit print()","algorithmdesignmanualbook.partialsum.PartialSum.print"]},{"name":"final Unit print()","description":"algorithmdesignmanualbook.sorting.HeapSort.print","location":"algorithms/algorithmdesignmanualbook.sorting/-heap-sort/print.html","searchKeys":["print","final Unit print()","algorithmdesignmanualbook.sorting.HeapSort.print"]},{"name":"final Unit print()","description":"algorithmsinanutshell.AVLTree.print","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/print.html","searchKeys":["print","final Unit print()","algorithmsinanutshell.AVLTree.print"]},{"name":"final Unit print()","description":"algorithmsinanutshell.spatialtree.KDTree.print","location":"algorithms/algorithmsinanutshell.spatialtree/-k-d-tree/print.html","searchKeys":["print","final Unit print()","algorithmsinanutshell.spatialtree.KDTree.print"]},{"name":"final Unit printAll()","description":"linkedlists.LinkedList.printAll","location":"algorithms/linkedlists/-linked-list/print-all.html","searchKeys":["printAll","final Unit printAll()","linkedlists.LinkedList.printAll"]},{"name":"final Unit remove(Integer value)","description":"algorithmdesignmanualbook.datastructures.O1DataStructure.remove","location":"algorithms/algorithmdesignmanualbook.datastructures/-o1-data-structure/remove.html","searchKeys":["remove","final Unit remove(Integer value)","algorithmdesignmanualbook.datastructures.O1DataStructure.remove"]},{"name":"final Unit search()","description":"algorithmsinanutshell.spatialtree.KDTree.search","location":"algorithms/algorithmsinanutshell.spatialtree/-k-d-tree/search.html","searchKeys":["search","final Unit search()","algorithmsinanutshell.spatialtree.KDTree.search"]},{"name":"final Unit setAllAsUnvisited()","description":"algorithmsinanutshell.Graph.setAllAsUnvisited","location":"algorithms/algorithmsinanutshell/-graph/set-all-as-unvisited.html","searchKeys":["setAllAsUnvisited","final Unit setAllAsUnvisited()","algorithmsinanutshell.Graph.setAllAsUnvisited"]},{"name":"final Unit setDest(Integer dest)","description":"algorithmdesignmanualbook.graph.SimpleGraph.Edge.setDest","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/-edge/set-dest.html","searchKeys":["setDest","final Unit setDest(Integer dest)","algorithmdesignmanualbook.graph.SimpleGraph.Edge.setDest"]},{"name":"final Unit setEdges(List<Graph.Edge> edges)","description":"algorithmsinanutshell.Graph.Vertex.setEdges","location":"algorithms/algorithmsinanutshell/-graph/-vertex/set-edges.html","searchKeys":["setEdges","final Unit setEdges(List<Graph.Edge> edges)","algorithmsinanutshell.Graph.Vertex.setEdges"]},{"name":"final Unit setEdges(Set<Graph.Edge> edges)","description":"algorithmdesignmanualbook.graph.Graph.Vertex.setEdges","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-vertex/set-edges.html","searchKeys":["setEdges","final Unit setEdges(Set<Graph.Edge> edges)","algorithmdesignmanualbook.graph.Graph.Vertex.setEdges"]},{"name":"final Unit setFlow(Integer flow)","description":"algorithmsinanutshell.networkflow.Network.Edge.setFlow","location":"algorithms/algorithmsinanutshell.networkflow/-network/-edge/set-flow.html","searchKeys":["setFlow","final Unit setFlow(Integer flow)","algorithmsinanutshell.networkflow.Network.Edge.setFlow"]},{"name":"final Unit setLeft(AVLTree.Node left)","description":"algorithmsinanutshell.AVLTree.Node.setLeft","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/-node/set-left.html","searchKeys":["setLeft","final Unit setLeft(AVLTree.Node left)","algorithmsinanutshell.AVLTree.Node.setLeft"]},{"name":"final Unit setLeft(MultiDimNode left)","description":"algorithmsinanutshell.spatialtree.MultiDimNode.setLeft","location":"algorithms/algorithmsinanutshell.spatialtree/-multi-dim-node/set-left.html","searchKeys":["setLeft","final Unit setLeft(MultiDimNode left)","algorithmsinanutshell.spatialtree.MultiDimNode.setLeft"]},{"name":"final Unit setLeft(Node left)","description":"algorithmdesignmanualbook.datastructures.Node.setLeft","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/set-left.html","searchKeys":["setLeft","final Unit setLeft(Node left)","algorithmdesignmanualbook.datastructures.Node.setLeft"]},{"name":"final Unit setNe(QuadTree.QuadNode ne)","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.setNe","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/set-ne.html","searchKeys":["setNe","final Unit setNe(QuadTree.QuadNode ne)","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.setNe"]},{"name":"final Unit setNext(LinkedListNode next)","description":"algorithmdesignmanualbook.datastructures.LinkedListNode.setNext","location":"algorithms/algorithmdesignmanualbook.datastructures/-linked-list-node/set-next.html","searchKeys":["setNext","final Unit setNext(LinkedListNode next)","algorithmdesignmanualbook.datastructures.LinkedListNode.setNext"]},{"name":"final Unit setNext(Node next)","description":"linkedlists.Node.setNext","location":"algorithms/linkedlists/-node/set-next.html","searchKeys":["setNext","final Unit setNext(Node next)","linkedlists.Node.setNext"]},{"name":"final Unit setNode(Node node)","description":"linkedlists.LinkedList.setNode","location":"algorithms/linkedlists/-linked-list/set-node.html","searchKeys":["setNode","final Unit setNode(Node node)","linkedlists.LinkedList.setNode"]},{"name":"final Unit setNodes(List<Graph.Vertex> nodes)","description":"algorithmsinanutshell.Graph.setNodes","location":"algorithms/algorithmsinanutshell/-graph/set-nodes.html","searchKeys":["setNodes","final Unit setNodes(List<Graph.Vertex> nodes)","algorithmsinanutshell.Graph.setNodes"]},{"name":"final Unit setNw(QuadTree.QuadNode nw)","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.setNw","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/set-nw.html","searchKeys":["setNw","final Unit setNw(QuadTree.QuadNode nw)","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.setNw"]},{"name":"final Unit setParent(Node parent)","description":"algorithmdesignmanualbook.datastructures.Node.setParent","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/set-parent.html","searchKeys":["setParent","final Unit setParent(Node parent)","algorithmdesignmanualbook.datastructures.Node.setParent"]},{"name":"final Unit setRight(AVLTree.Node right)","description":"algorithmsinanutshell.AVLTree.Node.setRight","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/-node/set-right.html","searchKeys":["setRight","final Unit setRight(AVLTree.Node right)","algorithmsinanutshell.AVLTree.Node.setRight"]},{"name":"final Unit setRight(MultiDimNode right)","description":"algorithmsinanutshell.spatialtree.MultiDimNode.setRight","location":"algorithms/algorithmsinanutshell.spatialtree/-multi-dim-node/set-right.html","searchKeys":["setRight","final Unit setRight(MultiDimNode right)","algorithmsinanutshell.spatialtree.MultiDimNode.setRight"]},{"name":"final Unit setRight(Node right)","description":"algorithmdesignmanualbook.datastructures.Node.setRight","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/set-right.html","searchKeys":["setRight","final Unit setRight(Node right)","algorithmdesignmanualbook.datastructures.Node.setRight"]},{"name":"final Unit setRoot(AVLTree.Node root)","description":"algorithmsinanutshell.AVLTree.setRoot","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/set-root.html","searchKeys":["setRoot","final Unit setRoot(AVLTree.Node root)","algorithmsinanutshell.AVLTree.setRoot"]},{"name":"final Unit setSe(QuadTree.QuadNode se)","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.setSe","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/set-se.html","searchKeys":["setSe","final Unit setSe(QuadTree.QuadNode se)","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.setSe"]},{"name":"final Unit setSink(Network.Vertex sink)","description":"algorithmsinanutshell.networkflow.Network.setSink","location":"algorithms/algorithmsinanutshell.networkflow/-network/set-sink.html","searchKeys":["setSink","final Unit setSink(Network.Vertex sink)","algorithmsinanutshell.networkflow.Network.setSink"]},{"name":"final Unit setSource(Network.Vertex source)","description":"algorithmsinanutshell.networkflow.Network.setSource","location":"algorithms/algorithmsinanutshell.networkflow/-network/set-source.html","searchKeys":["setSource","final Unit setSource(Network.Vertex source)","algorithmsinanutshell.networkflow.Network.setSource"]},{"name":"final Unit setSrc(Integer src)","description":"algorithmdesignmanualbook.graph.SimpleGraph.Edge.setSrc","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/-edge/set-src.html","searchKeys":["setSrc","final Unit setSrc(Integer src)","algorithmdesignmanualbook.graph.SimpleGraph.Edge.setSrc"]},{"name":"final Unit setState(Graph.State state)","description":"algorithmdesignmanualbook.graph.Graph.Vertex.setState","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-vertex/set-state.html","searchKeys":["setState","final Unit setState(Graph.State state)","algorithmdesignmanualbook.graph.Graph.Vertex.setState"]},{"name":"final Unit setState(Graph.State state)","description":"algorithmsinanutshell.Graph.Vertex.setState","location":"algorithms/algorithmsinanutshell/-graph/-vertex/set-state.html","searchKeys":["setState","final Unit setState(Graph.State state)","algorithmsinanutshell.Graph.Vertex.setState"]},{"name":"final Unit setSw(QuadTree.QuadNode sw)","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode.setSw","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/set-sw.html","searchKeys":["setSw","final Unit setSw(QuadTree.QuadNode sw)","algorithmsinanutshell.spatialtree.QuadTree.QuadNode.setSw"]},{"name":"final Unit setWeight(Integer weight)","description":"algorithmdesignmanualbook.graph.Graph.Edge.setWeight","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-edge/set-weight.html","searchKeys":["setWeight","final Unit setWeight(Integer weight)","algorithmdesignmanualbook.graph.Graph.Edge.setWeight"]},{"name":"final Unit setWeight(Integer weight)","description":"algorithmdesignmanualbook.graph.SimpleGraph.Edge.setWeight","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/-edge/set-weight.html","searchKeys":["setWeight","final Unit setWeight(Integer weight)","algorithmdesignmanualbook.graph.SimpleGraph.Edge.setWeight"]},{"name":"final Unit traverseInOrder()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.traverseInOrder","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/traverse-in-order.html","searchKeys":["traverseInOrder","final Unit traverseInOrder()","algorithmdesignmanualbook.datastructures.BinarySearchTree.traverseInOrder"]},{"name":"final Unit traversePostOrder()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.traversePostOrder","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/traverse-post-order.html","searchKeys":["traversePostOrder","final Unit traversePostOrder()","algorithmdesignmanualbook.datastructures.BinarySearchTree.traversePostOrder"]},{"name":"final Unit traversePreOrder()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree.traversePreOrder","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/traverse-pre-order.html","searchKeys":["traversePreOrder","final Unit traversePreOrder()","algorithmdesignmanualbook.datastructures.BinarySearchTree.traversePreOrder"]},{"name":"final static Array<Array<Integer>> multiplyMatrix(Array<Array<Integer>> matA, Array<Array<Integer>> matB)","description":"algorithmdesignmanualbook.datastructures.MatrixMultiplicationKt.multiplyMatrix","location":"algorithms/algorithmdesignmanualbook.datastructures/-matrix-multiplication-kt/multiply-matrix.html","searchKeys":["multiplyMatrix","final static Array<Array<Integer>> multiplyMatrix(Array<Array<Integer>> matA, Array<Array<Integer>> matB)","algorithmdesignmanualbook.datastructures.MatrixMultiplicationKt.multiplyMatrix"]},{"name":"final static Array<Integer> arrangeNegativeThenPositiveNumber(Array<Integer> array)","description":"algorithmdesignmanualbook.sorting.NegativePositiveNumberArrangementKt.arrangeNegativeThenPositiveNumber","location":"algorithms/algorithmdesignmanualbook.sorting/-negative-positive-number-arrangement-kt/arrange-negative-then-positive-number.html","searchKeys":["arrangeNegativeThenPositiveNumber","final static Array<Integer> arrangeNegativeThenPositiveNumber(Array<Integer> array)","algorithmdesignmanualbook.sorting.NegativePositiveNumberArrangementKt.arrangeNegativeThenPositiveNumber"]},{"name":"final static BinarySearchTree createBST()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTreeKt.createBST","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree-kt/create-b-s-t.html","searchKeys":["createBST","final static BinarySearchTree createBST()","algorithmdesignmanualbook.datastructures.BinarySearchTreeKt.createBST"]},{"name":"final static Boolean checkIfBalancedParentheses(String string)","description":"algorithmdesignmanualbook.datastructures.BalancedParenthesesKt.checkIfBalancedParentheses","location":"algorithms/algorithmdesignmanualbook.datastructures/-balanced-parentheses-kt/check-if-balanced-parentheses.html","searchKeys":["checkIfBalancedParentheses","final static Boolean checkIfBalancedParentheses(String string)","algorithmdesignmanualbook.datastructures.BalancedParenthesesKt.checkIfBalancedParentheses"]},{"name":"final static Boolean isGenerateStringFromCutoutPossible(String searchStr, String magazine)","description":"algorithmdesignmanualbook.datastructures.CutoutsToGenerateStringKt.isGenerateStringFromCutoutPossible","location":"algorithms/algorithmdesignmanualbook.datastructures/-cutouts-to-generate-string-kt/is-generate-string-from-cutout-possible.html","searchKeys":["isGenerateStringFromCutoutPossible","final static Boolean isGenerateStringFromCutoutPossible(String searchStr, String magazine)","algorithmdesignmanualbook.datastructures.CutoutsToGenerateStringKt.isGenerateStringFromCutoutPossible"]},{"name":"final static Boolean matchPatternNaive(String pattern, String str)","description":"algorithmdesignmanualbook.datastructures.StringPatternMatchingKt.matchPatternNaive","location":"algorithms/algorithmdesignmanualbook.datastructures/-string-pattern-matching-kt/match-pattern-naive.html","searchKeys":["matchPatternNaive","final static Boolean matchPatternNaive(String pattern, String str)","algorithmdesignmanualbook.datastructures.StringPatternMatchingKt.matchPatternNaive"]},{"name":"final static Boolean matchPatternUsingHash(String pattern, String str)","description":"algorithmdesignmanualbook.datastructures.StringPatternMatchingKt.matchPatternUsingHash","location":"algorithms/algorithmdesignmanualbook.datastructures/-string-pattern-matching-kt/match-pattern-using-hash.html","searchKeys":["matchPatternUsingHash","final static Boolean matchPatternUsingHash(String pattern, String str)","algorithmdesignmanualbook.datastructures.StringPatternMatchingKt.matchPatternUsingHash"]},{"name":"final static Integer findMagicIndex(IntArray array, Integer low, Integer high)","description":"algorithmdesignmanualbook.searching.MagicIndexSearchKt.findMagicIndex","location":"algorithms/algorithmdesignmanualbook.searching/-magic-index-search-kt/find-magic-index.html","searchKeys":["findMagicIndex","final static Integer findMagicIndex(IntArray array, Integer low, Integer high)","algorithmdesignmanualbook.searching.MagicIndexSearchKt.findMagicIndex"]},{"name":"final static Integer findPositionOfInvalidParenthesesOrNull(String string)","description":"algorithmdesignmanualbook.datastructures.BalancedParenthesesKt.findPositionOfInvalidParenthesesOrNull","location":"algorithms/algorithmdesignmanualbook.datastructures/-balanced-parentheses-kt/find-position-of-invalid-parentheses-or-null.html","searchKeys":["findPositionOfInvalidParenthesesOrNull","final static Integer findPositionOfInvalidParenthesesOrNull(String string)","algorithmdesignmanualbook.datastructures.BalancedParenthesesKt.findPositionOfInvalidParenthesesOrNull"]},{"name":"final static Integer midpointIndex(IntArray array)","description":"algorithmdesignmanualbook.sorting.FindMedianKt.midpointIndex","location":"algorithms/algorithmdesignmanualbook.sorting/-find-median-kt/midpoint-index.html","searchKeys":["midpointIndex","final static Integer midpointIndex(IntArray array)","algorithmdesignmanualbook.sorting.FindMedianKt.midpointIndex"]},{"name":"final static Point fromTo(Integer $self, Integer y)","description":"algorithmsinanutshell.LineModelKt.fromTo","location":"algorithms/algorithmsinanutshell/-line-model-kt/from-to.html","searchKeys":["fromTo","final static Point fromTo(Integer $self, Integer y)","algorithmsinanutshell.LineModelKt.fromTo"]},{"name":"final static StringBuilder formatPhoneNumber(List<Character> digits)","description":"questions.FormatPhoneNumberKt.formatPhoneNumber","location":"algorithms/questions/-format-phone-number-kt/format-phone-number.html","searchKeys":["formatPhoneNumber","final static StringBuilder formatPhoneNumber(List<Character> digits)","questions.FormatPhoneNumberKt.formatPhoneNumber"]},{"name":"final static String getVertexNames(Iterable<Graph.Vertex> $self)","description":"algorithmsinanutshell.GraphKt.getVertexNames","location":"algorithms/algorithmsinanutshell/-graph-kt/get-vertex-names.html","searchKeys":["getVertexNames","final static String getVertexNames(Iterable<Graph.Vertex> $self)","algorithmsinanutshell.GraphKt.getVertexNames"]},{"name":"final static String padLeft(String $self, Integer count)","description":"algorithmdesignmanualbook.UtilitiesKt.padLeft","location":"algorithms/algorithmdesignmanualbook/-utilities-kt/pad-left.html","searchKeys":["padLeft","final static String padLeft(String $self, Integer count)","algorithmdesignmanualbook.UtilitiesKt.padLeft"]},{"name":"final static String solution(Array<String> A, Array<String> B, String P)","description":"questions.SearchContactKt.solution","location":"algorithms/questions/-search-contact-kt/solution.html","searchKeys":["solution","final static String solution(Array<String> A, Array<String> B, String P)","questions.SearchContactKt.solution"]},{"name":"final static String solution(String S)","description":"questions.FormatPhoneNumberKt.solution","location":"algorithms/questions/-format-phone-number-kt/solution.html","searchKeys":["solution","final static String solution(String S)","questions.FormatPhoneNumberKt.solution"]},{"name":"final static T print<T extends Any>(T $self, String msg, Function1<T, Object> printer)","description":"algorithmdesignmanualbook.UtilitiesKt.print","location":"algorithms/algorithmdesignmanualbook/-utilities-kt/print.html","searchKeys":["print","final static T print<T extends Any>(T $self, String msg, Function1<T, Object> printer)","algorithmdesignmanualbook.UtilitiesKt.print"]},{"name":"final static T withPrint<T extends Any>(String msg, Function0<T> block)","description":"algorithmdesignmanualbook.UtilitiesKt.withPrint","location":"algorithms/algorithmdesignmanualbook/-utilities-kt/with-print.html","searchKeys":["withPrint","final static T withPrint<T extends Any>(String msg, Function0<T> block)","algorithmdesignmanualbook.UtilitiesKt.withPrint"]},{"name":"final static Unit addNode(Node node1, Node node2, Integer carry, LinkedList result)","description":"linkedlists.SumListsKt.addNode","location":"algorithms/linkedlists/-sum-lists-kt/add-node.html","searchKeys":["addNode","final static Unit addNode(Node node1, Node node2, Integer carry, LinkedList result)","linkedlists.SumListsKt.addNode"]},{"name":"final static Unit assertArraysSame<T extends Any>(Array<T> expected, Array<T> actual)","description":"utils.Assertions.assertArraysSame","location":"algorithms/utils/-assertions/assert-arrays-same.html","searchKeys":["assertArraysSame","final static Unit assertArraysSame<T extends Any>(Array<T> expected, Array<T> actual)","utils.Assertions.assertArraysSame"]},{"name":"final static Unit assertIterableSame<T extends Any>(Iterable<T> expected, Iterable<T> actual)","description":"utils.Assertions.assertIterableSame","location":"algorithms/utils/-assertions/assert-iterable-same.html","searchKeys":["assertIterableSame","final static Unit assertIterableSame<T extends Any>(Iterable<T> expected, Iterable<T> actual)","utils.Assertions.assertIterableSame"]},{"name":"final static Unit assertIterableSameInAnyOrder<T extends Any>(Iterable<T> expected, Iterable<T> actual)","description":"utils.Assertions.assertIterableSameInAnyOrder","location":"algorithms/utils/-assertions/assert-iterable-same-in-any-order.html","searchKeys":["assertIterableSameInAnyOrder","final static Unit assertIterableSameInAnyOrder<T extends Any>(Iterable<T> expected, Iterable<T> actual)","utils.Assertions.assertIterableSameInAnyOrder"]},{"name":"final static Unit merge(IntArray array, Integer low, Integer high, Integer mid)","description":"algorithmdesignmanualbook.sorting.MergeSortKt.merge","location":"algorithms/algorithmdesignmanualbook.sorting/-merge-sort-kt/merge.html","searchKeys":["merge","final static Unit merge(IntArray array, Integer low, Integer high, Integer mid)","algorithmdesignmanualbook.sorting.MergeSortKt.merge"]},{"name":"final static Unit prim(Array<Array<Integer>> graph, Integer vertex)","description":"algorithmdesignmanualbook.graph.PrimMinSpanningTreeKt.prim","location":"algorithms/algorithmdesignmanualbook.graph/-prim-min-spanning-tree-kt/prim.html","searchKeys":["prim","final static Unit prim(Array<Array<Integer>> graph, Integer vertex)","algorithmdesignmanualbook.graph.PrimMinSpanningTreeKt.prim"]},{"name":"final static Unit setColumnOfMatrix(Integer colIndex, Integer rowStart, Integer rowEnd, List<List<Integer>> matrix, List<Integer> updateList)","description":"arraysandstrings.MatrixRotationKt.setColumnOfMatrix","location":"algorithms/arraysandstrings/-matrix-rotation-kt/set-column-of-matrix.html","searchKeys":["setColumnOfMatrix","final static Unit setColumnOfMatrix(Integer colIndex, Integer rowStart, Integer rowEnd, List<List<Integer>> matrix, List<Integer> updateList)","arraysandstrings.MatrixRotationKt.setColumnOfMatrix"]},{"name":"final static Unit testForDeleteKthSmallestElement()","description":"algorithmdesignmanualbook.datastructures.BinarySearchTreeKt.testForDeleteKthSmallestElement","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree-kt/test-for-delete-kth-smallest-element.html","searchKeys":["testForDeleteKthSmallestElement","final static Unit testForDeleteKthSmallestElement()","algorithmdesignmanualbook.datastructures.BinarySearchTreeKt.testForDeleteKthSmallestElement"]},{"name":"public class AddWithoutPlus","description":"hard.AddWithoutPlus","location":"algorithms/hard/-add-without-plus/index.html","searchKeys":["AddWithoutPlus","public class AddWithoutPlus","hard.AddWithoutPlus"]},{"name":"public class BidirectionalTree","description":"graphs.commons.BidirectionalTree","location":"algorithms/graphs.commons/-bidirectional-tree/index.html","searchKeys":["BidirectionalTree","public class BidirectionalTree","graphs.commons.BidirectionalTree"]},{"name":"public class BinarySearchTree","description":"algorithmdesignmanualbook.datastructures.BinarySearchTree","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree/index.html","searchKeys":["BinarySearchTree","public class BinarySearchTree","algorithmdesignmanualbook.datastructures.BinarySearchTree"]},{"name":"public class BitUtils","description":"bits.commons.BitUtils","location":"algorithms/bits.commons/-bit-utils/index.html","searchKeys":["BitUtils","public class BitUtils","bits.commons.BitUtils"]},{"name":"public class BooleanEvaluation","description":"dynamic.BooleanEvaluation","location":"algorithms/dynamic/-boolean-evaluation/index.html","searchKeys":["BooleanEvaluation","public class BooleanEvaluation","dynamic.BooleanEvaluation"]},{"name":"public class Card","description":"hard.Shuffle.Card","location":"algorithms/hard/-shuffle/-card/index.html","searchKeys":["Card","public class Card","hard.Shuffle.Card"]},{"name":"public class Coins","description":"dynamic.Coins","location":"algorithms/dynamic/-coins/index.html","searchKeys":["Coins","public class Coins","dynamic.Coins"]},{"name":"public class Companion","description":"algorithmdesignmanualbook.datastructures.Node.Companion","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/-companion/index.html","searchKeys":["Companion","public class Companion","algorithmdesignmanualbook.datastructures.Node.Companion"]},{"name":"public class Companion","description":"algorithmdesignmanualbook.graph.Graph.Companion","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-companion/index.html","searchKeys":["Companion","public class Companion","algorithmdesignmanualbook.graph.Graph.Companion"]},{"name":"public class Companion","description":"algorithmsinanutshell.Graph.Companion","location":"algorithms/algorithmsinanutshell/-graph/-companion/index.html","searchKeys":["Companion","public class Companion","algorithmsinanutshell.Graph.Companion"]},{"name":"public class Conversion","description":"bits.Conversion","location":"algorithms/bits/-conversion/index.html","searchKeys":["Conversion","public class Conversion","bits.Conversion"]},{"name":"public class DynamicGrowShrinkArray","description":"algorithmdesignmanualbook.datastructures.DynamicGrowShrinkArray","location":"algorithms/algorithmdesignmanualbook.datastructures/-dynamic-grow-shrink-array/index.html","searchKeys":["DynamicGrowShrinkArray","public class DynamicGrowShrinkArray","algorithmdesignmanualbook.datastructures.DynamicGrowShrinkArray"]},{"name":"public class Edge","description":"graphs.commons.Graph.Edge","location":"algorithms/graphs.commons/-graph/-edge/index.html","searchKeys":["Edge","public class Edge","graphs.commons.Graph.Edge"]},{"name":"public class EightQueens","description":"dynamic.EightQueens","location":"algorithms/dynamic/-eight-queens/index.html","searchKeys":["EightQueens","public class EightQueens","dynamic.EightQueens"]},{"name":"public class FizzBuzz","description":"threads.FizzBuzz","location":"algorithms/threads/-fizz-buzz/index.html","searchKeys":["FizzBuzz","public class FizzBuzz","threads.FizzBuzz"]},{"name":"public class FlipBitToWin","description":"bits.FlipBitToWin","location":"algorithms/bits/-flip-bit-to-win/index.html","searchKeys":["FlipBitToWin","public class FlipBitToWin","bits.FlipBitToWin"]},{"name":"public class Graph","description":"graphs.commons.Graph","location":"algorithms/graphs.commons/-graph/index.html","searchKeys":["Graph","public class Graph","graphs.commons.Graph"]},{"name":"public class GroupAnagrams","description":"sortingandsearch.GroupAnagrams","location":"algorithms/sortingandsearch/-group-anagrams/index.html","searchKeys":["GroupAnagrams","public class GroupAnagrams","sortingandsearch.GroupAnagrams"]},{"name":"public class Insertion","description":"bits.Insertion","location":"algorithms/bits/-insertion/index.html","searchKeys":["Insertion","public class Insertion","bits.Insertion"]},{"name":"public class IsOneStringPermutationOfOther","description":"arraysandstrings.IsOneStringPermutationOfOther","location":"algorithms/arraysandstrings/-is-one-string-permutation-of-other/index.html","searchKeys":["IsOneStringPermutationOfOther","public class IsOneStringPermutationOfOther","arraysandstrings.IsOneStringPermutationOfOther"]},{"name":"public class Node","description":"graphs.commons.Node","location":"algorithms/graphs.commons/-node/index.html","searchKeys":["Node","public class Node","graphs.commons.Node"]},{"name":"public class OneAway","description":"arraysandstrings.OneAway","location":"algorithms/arraysandstrings/-one-away/index.html","searchKeys":["OneAway","public class OneAway","arraysandstrings.OneAway"]},{"name":"public class PaintFill","description":"dynamic.PaintFill","location":"algorithms/dynamic/-paint-fill/index.html","searchKeys":["PaintFill","public class PaintFill","dynamic.PaintFill"]},{"name":"public class PairwiseSwap","description":"bits.PairwiseSwap","location":"algorithms/bits/-pairwise-swap/index.html","searchKeys":["PairwiseSwap","public class PairwiseSwap","bits.PairwiseSwap"]},{"name":"public class Parens","description":"dynamic.Parens","location":"algorithms/dynamic/-parens/index.html","searchKeys":["Parens","public class Parens","dynamic.Parens"]},{"name":"public class PeaksAndValley","description":"sortingandsearch.PeaksAndValley","location":"algorithms/sortingandsearch/-peaks-and-valley/index.html","searchKeys":["PeaksAndValley","public class PeaksAndValley","sortingandsearch.PeaksAndValley"]},{"name":"public class PermutationCount","description":"bigo.PermutationCount","location":"algorithms/bigo/-permutation-count/index.html","searchKeys":["PermutationCount","public class PermutationCount","bigo.PermutationCount"]},{"name":"public class PermutationWithDuplicates","description":"dynamic.PermutationWithDuplicates","location":"algorithms/dynamic/-permutation-with-duplicates/index.html","searchKeys":["PermutationWithDuplicates","public class PermutationWithDuplicates","dynamic.PermutationWithDuplicates"]},{"name":"public class PermutationWithoutDuplicates","description":"dynamic.PermutationWithoutDuplicates","location":"algorithms/dynamic/-permutation-without-duplicates/index.html","searchKeys":["PermutationWithoutDuplicates","public class PermutationWithoutDuplicates","dynamic.PermutationWithoutDuplicates"]},{"name":"public class PowerOf2","description":"bigo.PowerOf2","location":"algorithms/bigo/-power-of2/index.html","searchKeys":["PowerOf2","public class PowerOf2","bigo.PowerOf2"]},{"name":"public class PrintUtils","description":"utils.PrintUtils","location":"algorithms/utils/-print-utils/index.html","searchKeys":["PrintUtils","public class PrintUtils","utils.PrintUtils"]},{"name":"public class RandomSet","description":"hard.RandomSet","location":"algorithms/hard/-random-set/index.html","searchKeys":["RandomSet","public class RandomSet","hard.RandomSet"]},{"name":"public class RankFromStream","description":"sortingandsearch.RankFromStream","location":"algorithms/sortingandsearch/-rank-from-stream/index.html","searchKeys":["RankFromStream","public class RankFromStream","sortingandsearch.RankFromStream"]},{"name":"public class RecursiveMultiply","description":"dynamic.RecursiveMultiply","location":"algorithms/dynamic/-recursive-multiply/index.html","searchKeys":["RecursiveMultiply","public class RecursiveMultiply","dynamic.RecursiveMultiply"]},{"name":"public class Shuffle","description":"hard.Shuffle","location":"algorithms/hard/-shuffle/index.html","searchKeys":["Shuffle","public class Shuffle","hard.Shuffle"]},{"name":"public class SortedMatrixSearch","description":"sortingandsearch.SortedMatrixSearch","location":"algorithms/sortingandsearch/-sorted-matrix-search/index.html","searchKeys":["SortedMatrixSearch","public class SortedMatrixSearch","sortingandsearch.SortedMatrixSearch"]},{"name":"public class SortedMerge","description":"sortingandsearch.SortedMerge","location":"algorithms/sortingandsearch/-sorted-merge/index.html","searchKeys":["SortedMerge","public class SortedMerge","sortingandsearch.SortedMerge"]},{"name":"public class SortedSearchNoSize","description":"sortingandsearch.SortedSearchNoSize","location":"algorithms/sortingandsearch/-sorted-search-no-size/index.html","searchKeys":["SortedSearchNoSize","public class SortedSearchNoSize","sortingandsearch.SortedSearchNoSize"]},{"name":"public class SparseSearch","description":"sortingandsearch.SparseSearch","location":"algorithms/sortingandsearch/-sparse-search/index.html","searchKeys":["SparseSearch","public class SparseSearch","sortingandsearch.SparseSearch"]},{"name":"public class Tower","description":"dynamic.TowerOfHanoi.Tower","location":"algorithms/dynamic/-tower-of-hanoi/-tower/index.html","searchKeys":["Tower","public class Tower","dynamic.TowerOfHanoi.Tower"]},{"name":"public class TowerOfHanoi","description":"dynamic.TowerOfHanoi","location":"algorithms/dynamic/-tower-of-hanoi/index.html","searchKeys":["TowerOfHanoi","public class TowerOfHanoi","dynamic.TowerOfHanoi"]},{"name":"public class Tree","description":"graphs.commons.Tree","location":"algorithms/graphs.commons/-tree/index.html","searchKeys":["Tree","public class Tree","graphs.commons.Tree"]},{"name":"public class URLify","description":"arraysandstrings.URLify","location":"algorithms/arraysandstrings/-u-r-lify/index.html","searchKeys":["URLify","public class URLify","arraysandstrings.URLify"]},{"name":"public class UniqueCharacters","description":"arraysandstrings.UniqueCharacters","location":"algorithms/arraysandstrings/-unique-characters/index.html","searchKeys":["UniqueCharacters","public class UniqueCharacters","arraysandstrings.UniqueCharacters"]},{"name":"public class Vertex","description":"graphs.commons.Graph.Vertex","location":"algorithms/graphs.commons/-graph/-vertex/index.html","searchKeys":["Vertex","public class Vertex","graphs.commons.Graph.Vertex"]},{"name":"public enum Orientation extends Enum<Orientation>","description":"algorithmsinanutshell.Orientation","location":"algorithms/algorithmsinanutshell/-orientation/index.html","searchKeys":["Orientation","public enum Orientation extends Enum<Orientation>","algorithmsinanutshell.Orientation"]},{"name":"public enum Relation extends Enum<Relation>","description":"algorithmsinanutshell.Relation","location":"algorithms/algorithmsinanutshell/-relation/index.html","searchKeys":["Relation","public enum Relation extends Enum<Relation>","algorithmsinanutshell.Relation"]},{"name":"public enum State","description":"graphs.commons.State","location":"algorithms/graphs.commons/-state/index.html","searchKeys":["State","public enum State","graphs.commons.State"]},{"name":"public enum State extends Enum<Graph.State>","description":"algorithmdesignmanualbook.graph.Graph.State","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-state/index.html","searchKeys":["State","public enum State extends Enum<Graph.State>","algorithmdesignmanualbook.graph.Graph.State"]},{"name":"public enum State extends Enum<Graph.State>","description":"algorithmsinanutshell.Graph.State","location":"algorithms/algorithmsinanutshell/-graph/-state/index.html","searchKeys":["State","public enum State extends Enum<Graph.State>","algorithmsinanutshell.Graph.State"]},{"name":"public final class AVLTree","description":"algorithmsinanutshell.AVLTree","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/index.html","searchKeys":["AVLTree","public final class AVLTree","algorithmsinanutshell.AVLTree"]},{"name":"public final class AllSubsets","description":"algorithmdesignmanualbook.heuristics.backtrack.AllSubsets","location":"algorithms/algorithmdesignmanualbook.heuristics.backtrack/-all-subsets/index.html","searchKeys":["AllSubsets","public final class AllSubsets","algorithmdesignmanualbook.heuristics.backtrack.AllSubsets"]},{"name":"public final class Assertions","description":"utils.Assertions","location":"algorithms/utils/-assertions/index.html","searchKeys":["Assertions","public final class Assertions","utils.Assertions"]},{"name":"public final class BalancedParenthesesKt","description":"algorithmdesignmanualbook.datastructures.BalancedParenthesesKt","location":"algorithms/algorithmdesignmanualbook.datastructures/-balanced-parentheses-kt/index.html","searchKeys":["BalancedParenthesesKt","public final class BalancedParenthesesKt","algorithmdesignmanualbook.datastructures.BalancedParenthesesKt"]},{"name":"public final class BinarySearchTreeKt","description":"algorithmdesignmanualbook.datastructures.BinarySearchTreeKt","location":"algorithms/algorithmdesignmanualbook.datastructures/-binary-search-tree-kt/index.html","searchKeys":["BinarySearchTreeKt","public final class BinarySearchTreeKt","algorithmdesignmanualbook.datastructures.BinarySearchTreeKt"]},{"name":"public final class BucketSort","description":"algorithmdesignmanualbook.sorting.BucketSort","location":"algorithms/algorithmdesignmanualbook.sorting/-bucket-sort/index.html","searchKeys":["BucketSort","public final class BucketSort","algorithmdesignmanualbook.sorting.BucketSort"]},{"name":"public final class ConvexHullScanUsingGrahamScan","description":"algorithmsinanutshell.ConvexHullScanUsingGrahamScan","location":"algorithms/algorithmsinanutshell/-convex-hull-scan-using-graham-scan/index.html","searchKeys":["ConvexHullScanUsingGrahamScan","public final class ConvexHullScanUsingGrahamScan","algorithmsinanutshell.ConvexHullScanUsingGrahamScan"]},{"name":"public final class CutoutsToGenerateStringKt","description":"algorithmdesignmanualbook.datastructures.CutoutsToGenerateStringKt","location":"algorithms/algorithmdesignmanualbook.datastructures/-cutouts-to-generate-string-kt/index.html","searchKeys":["CutoutsToGenerateStringKt","public final class CutoutsToGenerateStringKt","algorithmdesignmanualbook.datastructures.CutoutsToGenerateStringKt"]},{"name":"public final class DijkstraAlgorithm","description":"algorithmsinanutshell.DijkstraAlgorithm","location":"algorithms/algorithmsinanutshell/-dijkstra-algorithm/index.html","searchKeys":["DijkstraAlgorithm","public final class DijkstraAlgorithm","algorithmsinanutshell.DijkstraAlgorithm"]},{"name":"public final class Edge","description":"algorithmdesignmanualbook.graph.Graph.Edge","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-edge/index.html","searchKeys":["Edge","public final class Edge","algorithmdesignmanualbook.graph.Graph.Edge"]},{"name":"public final class Edge","description":"algorithmdesignmanualbook.graph.SimpleGraph.Edge","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/-edge/index.html","searchKeys":["Edge","public final class Edge","algorithmdesignmanualbook.graph.SimpleGraph.Edge"]},{"name":"public final class Edge","description":"algorithmsinanutshell.Graph.Edge","location":"algorithms/algorithmsinanutshell/-graph/-edge/index.html","searchKeys":["Edge","public final class Edge","algorithmsinanutshell.Graph.Edge"]},{"name":"public final class Edge","description":"algorithmsinanutshell.networkflow.Network.Edge","location":"algorithms/algorithmsinanutshell.networkflow/-network/-edge/index.html","searchKeys":["Edge","public final class Edge","algorithmsinanutshell.networkflow.Network.Edge"]},{"name":"public final class FindMedianKt","description":"algorithmdesignmanualbook.sorting.FindMedianKt","location":"algorithms/algorithmdesignmanualbook.sorting/-find-median-kt/index.html","searchKeys":["FindMedianKt","public final class FindMedianKt","algorithmdesignmanualbook.sorting.FindMedianKt"]},{"name":"public final class FlattenBSTIntoLinkedList","description":"algorithmdesignmanualbook.datastructures.FlattenBSTIntoLinkedList","location":"algorithms/algorithmdesignmanualbook.datastructures/-flatten-b-s-t-into-linked-list/index.html","searchKeys":["FlattenBSTIntoLinkedList","public final class FlattenBSTIntoLinkedList","algorithmdesignmanualbook.datastructures.FlattenBSTIntoLinkedList"]},{"name":"public final class FloydWarshallAlgorithm","description":"algorithmsinanutshell.FloydWarshallAlgorithm","location":"algorithms/algorithmsinanutshell/-floyd-warshall-algorithm/index.html","searchKeys":["FloydWarshallAlgorithm","public final class FloydWarshallAlgorithm","algorithmsinanutshell.FloydWarshallAlgorithm"]},{"name":"public final class FordFulkersonAlgorithm","description":"algorithmsinanutshell.networkflow.FordFulkersonAlgorithm","location":"algorithms/algorithmsinanutshell.networkflow/-ford-fulkerson-algorithm/index.html","searchKeys":["FordFulkersonAlgorithm","public final class FordFulkersonAlgorithm","algorithmsinanutshell.networkflow.FordFulkersonAlgorithm"]},{"name":"public final class FormatPhoneNumberKt","description":"questions.FormatPhoneNumberKt","location":"algorithms/questions/-format-phone-number-kt/index.html","searchKeys":["FormatPhoneNumberKt","public final class FormatPhoneNumberKt","questions.FormatPhoneNumberKt"]},{"name":"public final class Graph","description":"algorithmdesignmanualbook.graph.Graph","location":"algorithms/algorithmdesignmanualbook.graph/-graph/index.html","searchKeys":["Graph","public final class Graph","algorithmdesignmanualbook.graph.Graph"]},{"name":"public final class Graph","description":"algorithmsinanutshell.Graph","location":"algorithms/algorithmsinanutshell/-graph/index.html","searchKeys":["Graph","public final class Graph","algorithmsinanutshell.Graph"]},{"name":"public final class GraphKt","description":"algorithmsinanutshell.GraphKt","location":"algorithms/algorithmsinanutshell/-graph-kt/index.html","searchKeys":["GraphKt","public final class GraphKt","algorithmsinanutshell.GraphKt"]},{"name":"public final class HeapSort","description":"algorithmdesignmanualbook.sorting.HeapSort","location":"algorithms/algorithmdesignmanualbook.sorting/-heap-sort/index.html","searchKeys":["HeapSort","public final class HeapSort","algorithmdesignmanualbook.sorting.HeapSort"]},{"name":"public final class IdenticalBinaryTree","description":"algorithmdesignmanualbook.datastructures.IdenticalBinaryTree","location":"algorithms/algorithmdesignmanualbook.datastructures/-identical-binary-tree/index.html","searchKeys":["IdenticalBinaryTree","public final class IdenticalBinaryTree","algorithmdesignmanualbook.datastructures.IdenticalBinaryTree"]},{"name":"public final class IntersectionOfLines","description":"algorithmsinanutshell.IntersectionOfLines","location":"algorithms/algorithmsinanutshell/-intersection-of-lines/index.html","searchKeys":["IntersectionOfLines","public final class IntersectionOfLines","algorithmsinanutshell.IntersectionOfLines"]},{"name":"public final class KDTree","description":"algorithmsinanutshell.spatialtree.KDTree","location":"algorithms/algorithmsinanutshell.spatialtree/-k-d-tree/index.html","searchKeys":["KDTree","public final class KDTree","algorithmsinanutshell.spatialtree.KDTree"]},{"name":"public final class KnapSack01","description":"algorithmsinanutshell.spatialtree.KnapSack01","location":"algorithms/algorithmsinanutshell.spatialtree/-knap-sack01/index.html","searchKeys":["KnapSack01","public final class KnapSack01","algorithmsinanutshell.spatialtree.KnapSack01"]},{"name":"public final class Line","description":"algorithmsinanutshell.Line","location":"algorithms/algorithmsinanutshell/-line/index.html","searchKeys":["Line","public final class Line","algorithmsinanutshell.Line"]},{"name":"public final class LineModelKt","description":"algorithmsinanutshell.LineModelKt","location":"algorithms/algorithmsinanutshell/-line-model-kt/index.html","searchKeys":["LineModelKt","public final class LineModelKt","algorithmsinanutshell.LineModelKt"]},{"name":"public final class LineSweepAlgorithm","description":"algorithmsinanutshell.LineSweepAlgorithm","location":"algorithms/algorithmsinanutshell/-line-sweep-algorithm/index.html","searchKeys":["LineSweepAlgorithm","public final class LineSweepAlgorithm","algorithmsinanutshell.LineSweepAlgorithm"]},{"name":"public final class LinkedList","description":"linkedlists.LinkedList","location":"algorithms/linkedlists/-linked-list/index.html","searchKeys":["LinkedList","public final class LinkedList","linkedlists.LinkedList"]},{"name":"public final class LinkedListNode","description":"algorithmdesignmanualbook.datastructures.LinkedListNode","location":"algorithms/algorithmdesignmanualbook.datastructures/-linked-list-node/index.html","searchKeys":["LinkedListNode","public final class LinkedListNode","algorithmdesignmanualbook.datastructures.LinkedListNode"]},{"name":"public final class MagicIndexSearchKt","description":"algorithmdesignmanualbook.searching.MagicIndexSearchKt","location":"algorithms/algorithmdesignmanualbook.searching/-magic-index-search-kt/index.html","searchKeys":["MagicIndexSearchKt","public final class MagicIndexSearchKt","algorithmdesignmanualbook.searching.MagicIndexSearchKt"]},{"name":"public final class MatrixMultiplicationKt","description":"algorithmdesignmanualbook.datastructures.MatrixMultiplicationKt","location":"algorithms/algorithmdesignmanualbook.datastructures/-matrix-multiplication-kt/index.html","searchKeys":["MatrixMultiplicationKt","public final class MatrixMultiplicationKt","algorithmdesignmanualbook.datastructures.MatrixMultiplicationKt"]},{"name":"public final class MatrixRotationKt","description":"arraysandstrings.MatrixRotationKt","location":"algorithms/arraysandstrings/-matrix-rotation-kt/index.html","searchKeys":["MatrixRotationKt","public final class MatrixRotationKt","arraysandstrings.MatrixRotationKt"]},{"name":"public final class MergeSortKt","description":"algorithmdesignmanualbook.sorting.MergeSortKt","location":"algorithms/algorithmdesignmanualbook.sorting/-merge-sort-kt/index.html","searchKeys":["MergeSortKt","public final class MergeSortKt","algorithmdesignmanualbook.sorting.MergeSortKt"]},{"name":"public final class MultiDimNode","description":"algorithmsinanutshell.spatialtree.MultiDimNode","location":"algorithms/algorithmsinanutshell.spatialtree/-multi-dim-node/index.html","searchKeys":["MultiDimNode","public final class MultiDimNode","algorithmsinanutshell.spatialtree.MultiDimNode"]},{"name":"public final class MultiplicativeArrayWithDivision implements MultiplicativeArray","description":"algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDivision","location":"algorithms/algorithmdesignmanualbook.datastructures/-multiplicative-array-with-division/index.html","searchKeys":["MultiplicativeArrayWithDivision","public final class MultiplicativeArrayWithDivision implements MultiplicativeArray","algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDivision"]},{"name":"public final class MultiplicativeArrayWithDoubleArrayApproach implements MultiplicativeArray","description":"algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDoubleArrayApproach","location":"algorithms/algorithmdesignmanualbook.datastructures/-multiplicative-array-with-double-array-approach/index.html","searchKeys":["MultiplicativeArrayWithDoubleArrayApproach","public final class MultiplicativeArrayWithDoubleArrayApproach implements MultiplicativeArray","algorithmdesignmanualbook.datastructures.MultiplicativeArrayWithDoubleArrayApproach"]},{"name":"public final class NearestNeighbourQueries","description":"algorithmsinanutshell.spatialtree.NearestNeighbourQueries","location":"algorithms/algorithmsinanutshell.spatialtree/-nearest-neighbour-queries/index.html","searchKeys":["NearestNeighbourQueries","public final class NearestNeighbourQueries","algorithmsinanutshell.spatialtree.NearestNeighbourQueries"]},{"name":"public final class NegativePositiveNumberArrangementKt","description":"algorithmdesignmanualbook.sorting.NegativePositiveNumberArrangementKt","location":"algorithms/algorithmdesignmanualbook.sorting/-negative-positive-number-arrangement-kt/index.html","searchKeys":["NegativePositiveNumberArrangementKt","public final class NegativePositiveNumberArrangementKt","algorithmdesignmanualbook.sorting.NegativePositiveNumberArrangementKt"]},{"name":"public final class Network","description":"algorithmsinanutshell.networkflow.Network","location":"algorithms/algorithmsinanutshell.networkflow/-network/index.html","searchKeys":["Network","public final class Network","algorithmsinanutshell.networkflow.Network"]},{"name":"public final class NoInitializationArray","description":"algorithmdesignmanualbook.datastructures.NoInitializationArray","location":"algorithms/algorithmdesignmanualbook.datastructures/-no-initialization-array/index.html","searchKeys":["NoInitializationArray","public final class NoInitializationArray","algorithmdesignmanualbook.datastructures.NoInitializationArray"]},{"name":"public final class Node","description":"algorithmdesignmanualbook.datastructures.Node","location":"algorithms/algorithmdesignmanualbook.datastructures/-node/index.html","searchKeys":["Node","public final class Node","algorithmdesignmanualbook.datastructures.Node"]},{"name":"public final class Node","description":"algorithmsinanutshell.AVLTree.Node","location":"algorithms/algorithmsinanutshell/-a-v-l-tree/-node/index.html","searchKeys":["Node","public final class Node","algorithmsinanutshell.AVLTree.Node"]},{"name":"public final class Node","description":"linkedlists.Node","location":"algorithms/linkedlists/-node/index.html","searchKeys":["Node","public final class Node","linkedlists.Node"]},{"name":"public final class O1DataStructure","description":"algorithmdesignmanualbook.datastructures.O1DataStructure","location":"algorithms/algorithmdesignmanualbook.datastructures/-o1-data-structure/index.html","searchKeys":["O1DataStructure","public final class O1DataStructure","algorithmdesignmanualbook.datastructures.O1DataStructure"]},{"name":"public final class PartialSum","description":"algorithmdesignmanualbook.partialsum.PartialSum","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum/index.html","searchKeys":["PartialSum","public final class PartialSum","algorithmdesignmanualbook.partialsum.PartialSum"]},{"name":"public final class PartialSumUsingFenwickTree","description":"algorithmdesignmanualbook.partialsum.PartialSumUsingFenwickTree","location":"algorithms/algorithmdesignmanualbook.partialsum/-partial-sum-using-fenwick-tree/index.html","searchKeys":["PartialSumUsingFenwickTree","public final class PartialSumUsingFenwickTree","algorithmdesignmanualbook.partialsum.PartialSumUsingFenwickTree"]},{"name":"public final class Permutation","description":"algorithmdesignmanualbook.heuristics.backtrack.Permutation","location":"algorithms/algorithmdesignmanualbook.heuristics.backtrack/-permutation/index.html","searchKeys":["Permutation","public final class Permutation","algorithmdesignmanualbook.heuristics.backtrack.Permutation"]},{"name":"public final class Point","description":"algorithmsinanutshell.Point","location":"algorithms/algorithmsinanutshell/-point/index.html","searchKeys":["Point","public final class Point","algorithmsinanutshell.Point"]},{"name":"public final class PrimMinSpanningTreeAlgorithm","description":"algorithmsinanutshell.PrimMinSpanningTreeAlgorithm","location":"algorithms/algorithmsinanutshell/-prim-min-spanning-tree-algorithm/index.html","searchKeys":["PrimMinSpanningTreeAlgorithm","public final class PrimMinSpanningTreeAlgorithm","algorithmsinanutshell.PrimMinSpanningTreeAlgorithm"]},{"name":"public final class PrimMinSpanningTreeKt","description":"algorithmdesignmanualbook.graph.PrimMinSpanningTreeKt","location":"algorithms/algorithmdesignmanualbook.graph/-prim-min-spanning-tree-kt/index.html","searchKeys":["PrimMinSpanningTreeKt","public final class PrimMinSpanningTreeKt","algorithmdesignmanualbook.graph.PrimMinSpanningTreeKt"]},{"name":"public final class QuadNode","description":"algorithmsinanutshell.spatialtree.QuadTree.QuadNode","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/-quad-node/index.html","searchKeys":["QuadNode","public final class QuadNode","algorithmsinanutshell.spatialtree.QuadTree.QuadNode"]},{"name":"public final class QuadTree","description":"algorithmsinanutshell.spatialtree.QuadTree","location":"algorithms/algorithmsinanutshell.spatialtree/-quad-tree/index.html","searchKeys":["QuadTree","public final class QuadTree","algorithmsinanutshell.spatialtree.QuadTree"]},{"name":"public final class SearchContactKt","description":"questions.SearchContactKt","location":"algorithms/questions/-search-contact-kt/index.html","searchKeys":["SearchContactKt","public final class SearchContactKt","questions.SearchContactKt"]},{"name":"public final class SimpleGraph","description":"algorithmdesignmanualbook.graph.SimpleGraph","location":"algorithms/algorithmdesignmanualbook.graph/-simple-graph/index.html","searchKeys":["SimpleGraph","public final class SimpleGraph","algorithmdesignmanualbook.graph.SimpleGraph"]},{"name":"public final class SmallestNumberInRangeHashMapApproach implements SmallestNumberInRange","description":"algorithmdesignmanualbook.datastructures.SmallestNumberInRangeHashMapApproach","location":"algorithms/algorithmdesignmanualbook.datastructures/-smallest-number-in-range-hash-map-approach/index.html","searchKeys":["SmallestNumberInRangeHashMapApproach","public final class SmallestNumberInRangeHashMapApproach implements SmallestNumberInRange","algorithmdesignmanualbook.datastructures.SmallestNumberInRangeHashMapApproach"]},{"name":"public final class SmallestNumberInRangeMatrixApproach implements SmallestNumberInRange","description":"algorithmdesignmanualbook.datastructures.SmallestNumberInRangeMatrixApproach","location":"algorithms/algorithmdesignmanualbook.datastructures/-smallest-number-in-range-matrix-approach/index.html","searchKeys":["SmallestNumberInRangeMatrixApproach","public final class SmallestNumberInRangeMatrixApproach implements SmallestNumberInRange","algorithmdesignmanualbook.datastructures.SmallestNumberInRangeMatrixApproach"]},{"name":"public final class StringPatternMatchingKt","description":"algorithmdesignmanualbook.datastructures.StringPatternMatchingKt","location":"algorithms/algorithmdesignmanualbook.datastructures/-string-pattern-matching-kt/index.html","searchKeys":["StringPatternMatchingKt","public final class StringPatternMatchingKt","algorithmdesignmanualbook.datastructures.StringPatternMatchingKt"]},{"name":"public final class SumListsKt","description":"linkedlists.SumListsKt","location":"algorithms/linkedlists/-sum-lists-kt/index.html","searchKeys":["SumListsKt","public final class SumListsKt","linkedlists.SumListsKt"]},{"name":"public final class UtilitiesKt","description":"algorithmdesignmanualbook.UtilitiesKt","location":"algorithms/algorithmdesignmanualbook/-utilities-kt/index.html","searchKeys":["UtilitiesKt","public final class UtilitiesKt","algorithmdesignmanualbook.UtilitiesKt"]},{"name":"public final class Vertex","description":"algorithmdesignmanualbook.graph.Graph.Vertex","location":"algorithms/algorithmdesignmanualbook.graph/-graph/-vertex/index.html","searchKeys":["Vertex","public final class Vertex","algorithmdesignmanualbook.graph.Graph.Vertex"]},{"name":"public final class Vertex","description":"algorithmsinanutshell.Graph.Vertex","location":"algorithms/algorithmsinanutshell/-graph/-vertex/index.html","searchKeys":["Vertex","public final class Vertex","algorithmsinanutshell.Graph.Vertex"]},{"name":"public final class Vertex","description":"algorithmsinanutshell.networkflow.Network.Vertex","location":"algorithms/algorithmsinanutshell.networkflow/-network/-vertex/index.html","searchKeys":["Vertex","public final class Vertex","algorithmsinanutshell.networkflow.Network.Vertex"]},{"name":"static Array<State> values()","description":"graphs.commons.State.values","location":"algorithms/graphs.commons/-state/values.html","searchKeys":["values","static Array<State> values()","graphs.commons.State.values"]},{"name":"static State valueOf(String name)","description":"graphs.commons.State.valueOf","location":"algorithms/graphs.commons/-state/value-of.html","searchKeys":["valueOf","static State valueOf(String name)","graphs.commons.State.valueOf"]},{"name":"static byte clearBit(byte value, int position)","description":"bits.commons.BitUtils.clearBit","location":"algorithms/bits.commons/-bit-utils/clear-bit.html","searchKeys":["clearBit","static byte clearBit(byte value, int position)","bits.commons.BitUtils.clearBit"]},{"name":"static byte setBit(byte value, int position)","description":"bits.commons.BitUtils.setBit","location":"algorithms/bits.commons/-bit-utils/set-bit.html","searchKeys":["setBit","static byte setBit(byte value, int position)","bits.commons.BitUtils.setBit"]},{"name":"static int add(int a, int b)","description":"hard.AddWithoutPlus.add","location":"algorithms/hard/-add-without-plus/add.html","searchKeys":["add","static int add(int a, int b)","hard.AddWithoutPlus.add"]},{"name":"static void main(Array<String> args)","description":"algorithmdesignmanualbook.datastructures.DynamicGrowShrinkArray.main","location":"algorithms/algorithmdesignmanualbook.datastructures/-dynamic-grow-shrink-array/main.html","searchKeys":["main","static void main(Array<String> args)","algorithmdesignmanualbook.datastructures.DynamicGrowShrinkArray.main"]},{"name":"static void main(Array<String> args)","description":"arraysandstrings.IsOneStringPermutationOfOther.main","location":"algorithms/arraysandstrings/-is-one-string-permutation-of-other/main.html","searchKeys":["main","static void main(Array<String> args)","arraysandstrings.IsOneStringPermutationOfOther.main"]},{"name":"static void main(Array<String> args)","description":"arraysandstrings.URLify.main","location":"algorithms/arraysandstrings/-u-r-lify/main.html","searchKeys":["main","static void main(Array<String> args)","arraysandstrings.URLify.main"]},{"name":"static void main(Array<String> args)","description":"arraysandstrings.UniqueCharacters.main","location":"algorithms/arraysandstrings/-unique-characters/main.html","searchKeys":["main","static void main(Array<String> args)","arraysandstrings.UniqueCharacters.main"]},{"name":"static void main(Array<String> args)","description":"bigo.PermutationCount.main","location":"algorithms/bigo/-permutation-count/main.html","searchKeys":["main","static void main(Array<String> args)","bigo.PermutationCount.main"]},{"name":"static void main(Array<String> args)","description":"bigo.PowerOf2.main","location":"algorithms/bigo/-power-of2/main.html","searchKeys":["main","static void main(Array<String> args)","bigo.PowerOf2.main"]},{"name":"static void main(Array<String> args)","description":"bits.Conversion.main","location":"algorithms/bits/-conversion/main.html","searchKeys":["main","static void main(Array<String> args)","bits.Conversion.main"]},{"name":"static void main(Array<String> args)","description":"bits.FlipBitToWin.main","location":"algorithms/bits/-flip-bit-to-win/main.html","searchKeys":["main","static void main(Array<String> args)","bits.FlipBitToWin.main"]},{"name":"static void main(Array<String> args)","description":"bits.Insertion.main","location":"algorithms/bits/-insertion/main.html","searchKeys":["main","static void main(Array<String> args)","bits.Insertion.main"]},{"name":"static void main(Array<String> args)","description":"bits.PairwiseSwap.main","location":"algorithms/bits/-pairwise-swap/main.html","searchKeys":["main","static void main(Array<String> args)","bits.PairwiseSwap.main"]},{"name":"static void main(Array<String> args)","description":"bits.commons.BitUtils.main","location":"algorithms/bits.commons/-bit-utils/main.html","searchKeys":["main","static void main(Array<String> args)","bits.commons.BitUtils.main"]},{"name":"static void main(Array<String> args)","description":"dynamic.BooleanEvaluation.main","location":"algorithms/dynamic/-boolean-evaluation/main.html","searchKeys":["main","static void main(Array<String> args)","dynamic.BooleanEvaluation.main"]},{"name":"static void main(Array<String> args)","description":"dynamic.Coins.main","location":"algorithms/dynamic/-coins/main.html","searchKeys":["main","static void main(Array<String> args)","dynamic.Coins.main"]},{"name":"static void main(Array<String> args)","description":"dynamic.EightQueens.main","location":"algorithms/dynamic/-eight-queens/main.html","searchKeys":["main","static void main(Array<String> args)","dynamic.EightQueens.main"]},{"name":"static void main(Array<String> args)","description":"dynamic.PaintFill.main","location":"algorithms/dynamic/-paint-fill/main.html","searchKeys":["main","static void main(Array<String> args)","dynamic.PaintFill.main"]},{"name":"static void main(Array<String> args)","description":"dynamic.Parens.main","location":"algorithms/dynamic/-parens/main.html","searchKeys":["main","static void main(Array<String> args)","dynamic.Parens.main"]},{"name":"static void main(Array<String> args)","description":"dynamic.PermutationWithDuplicates.main","location":"algorithms/dynamic/-permutation-with-duplicates/main.html","searchKeys":["main","static void main(Array<String> args)","dynamic.PermutationWithDuplicates.main"]},{"name":"static void main(Array<String> args)","description":"dynamic.PermutationWithoutDuplicates.main","location":"algorithms/dynamic/-permutation-without-duplicates/main.html","searchKeys":["main","static void main(Array<String> args)","dynamic.PermutationWithoutDuplicates.main"]},{"name":"static void main(Array<String> args)","description":"dynamic.RecursiveMultiply.main","location":"algorithms/dynamic/-recursive-multiply/main.html","searchKeys":["main","static void main(Array<String> args)","dynamic.RecursiveMultiply.main"]},{"name":"static void main(Array<String> args)","description":"dynamic.TowerOfHanoi.main","location":"algorithms/dynamic/-tower-of-hanoi/main.html","searchKeys":["main","static void main(Array<String> args)","dynamic.TowerOfHanoi.main"]},{"name":"static void main(Array<String> args)","description":"hard.AddWithoutPlus.main","location":"algorithms/hard/-add-without-plus/main.html","searchKeys":["main","static void main(Array<String> args)","hard.AddWithoutPlus.main"]},{"name":"static void main(Array<String> args)","description":"hard.RandomSet.main","location":"algorithms/hard/-random-set/main.html","searchKeys":["main","static void main(Array<String> args)","hard.RandomSet.main"]},{"name":"static void main(Array<String> args)","description":"hard.Shuffle.main","location":"algorithms/hard/-shuffle/main.html","searchKeys":["main","static void main(Array<String> args)","hard.Shuffle.main"]},{"name":"static void main(Array<String> args)","description":"sortingandsearch.GroupAnagrams.main","location":"algorithms/sortingandsearch/-group-anagrams/main.html","searchKeys":["main","static void main(Array<String> args)","sortingandsearch.GroupAnagrams.main"]},{"name":"static void main(Array<String> args)","description":"sortingandsearch.PeaksAndValley.main","location":"algorithms/sortingandsearch/-peaks-and-valley/main.html","searchKeys":["main","static void main(Array<String> args)","sortingandsearch.PeaksAndValley.main"]},{"name":"static void main(Array<String> args)","description":"sortingandsearch.RankFromStream.main","location":"algorithms/sortingandsearch/-rank-from-stream/main.html","searchKeys":["main","static void main(Array<String> args)","sortingandsearch.RankFromStream.main"]},{"name":"static void main(Array<String> args)","description":"sortingandsearch.SortedMatrixSearch.main","location":"algorithms/sortingandsearch/-sorted-matrix-search/main.html","searchKeys":["main","static void main(Array<String> args)","sortingandsearch.SortedMatrixSearch.main"]},{"name":"static void main(Array<String> args)","description":"sortingandsearch.SortedMerge.main","location":"algorithms/sortingandsearch/-sorted-merge/main.html","searchKeys":["main","static void main(Array<String> args)","sortingandsearch.SortedMerge.main"]},{"name":"static void main(Array<String> args)","description":"sortingandsearch.SortedSearchNoSize.main","location":"algorithms/sortingandsearch/-sorted-search-no-size/main.html","searchKeys":["main","static void main(Array<String> args)","sortingandsearch.SortedSearchNoSize.main"]},{"name":"static void main(Array<String> args)","description":"sortingandsearch.SparseSearch.main","location":"algorithms/sortingandsearch/-sparse-search/main.html","searchKeys":["main","static void main(Array<String> args)","sortingandsearch.SparseSearch.main"]},{"name":"static void main(Array<String> args)","description":"threads.FizzBuzz.main","location":"algorithms/threads/-fizz-buzz/main.html","searchKeys":["main","static void main(Array<String> args)","threads.FizzBuzz.main"]},{"name":"static void print<T>(Iterable<T> it)","description":"utils.PrintUtils.print","location":"algorithms/utils/-print-utils/print.html","searchKeys":["print","static void print<T>(Iterable<T> it)","utils.PrintUtils.print"]},{"name":"static void printArr<T>(Iterable<Array<T>> it)","description":"utils.PrintUtils.printArr","location":"algorithms/utils/-print-utils/print-arr.html","searchKeys":["printArr","static void printArr<T>(Iterable<Array<T>> it)","utils.PrintUtils.printArr"]},{"name":"static void printIntArrWithCast(Iterable<Array<Integer>> it)","description":"utils.PrintUtils.printIntArrWithCast","location":"algorithms/utils/-print-utils/print-int-arr-with-cast.html","searchKeys":["printIntArrWithCast","static void printIntArrWithCast(Iterable<Array<Integer>> it)","utils.PrintUtils.printIntArrWithCast"]},{"name":"static void println<T>(Iterable<T> it)","description":"utils.PrintUtils.println","location":"algorithms/utils/-print-utils/println.html","searchKeys":["println","static void println<T>(Iterable<T> it)","utils.PrintUtils.println"]},{"name":"void BidirectionalTree(BidirectionalTree parent, Integer data)","description":"graphs.commons.BidirectionalTree.BidirectionalTree","location":"algorithms/graphs.commons/-bidirectional-tree/-bidirectional-tree.html","searchKeys":["BidirectionalTree","void BidirectionalTree(BidirectionalTree parent, Integer data)","graphs.commons.BidirectionalTree.BidirectionalTree"]},{"name":"void Graph()","description":"graphs.commons.Graph.Graph","location":"algorithms/graphs.commons/-graph/-graph.html","searchKeys":["Graph","void Graph()","graphs.commons.Graph.Graph"]},{"name":"void Graph.Edge(Graph.Vertex start, Graph.Vertex end)","description":"graphs.commons.Graph.Edge.Graph.Edge","location":"algorithms/graphs.commons/-graph/-edge/-graph.-edge.html","searchKeys":["Edge","void Graph.Edge(Graph.Vertex start, Graph.Vertex end)","graphs.commons.Graph.Edge.Graph.Edge"]},{"name":"void Graph.Vertex(String value)","description":"graphs.commons.Graph.Vertex.Graph.Vertex","location":"algorithms/graphs.commons/-graph/-vertex/-graph.-vertex.html","searchKeys":["Vertex","void Graph.Vertex(String value)","graphs.commons.Graph.Vertex.Graph.Vertex"]},{"name":"void Node(int value)","description":"graphs.commons.Node.Node","location":"algorithms/graphs.commons/-node/-node.html","searchKeys":["Node","void Node(int value)","graphs.commons.Node.Node"]},{"name":"void Shuffle.Card(String value, String symbol)","description":"hard.Shuffle.Card.Shuffle.Card","location":"algorithms/hard/-shuffle/-card/-shuffle.-card.html","searchKeys":["Card","void Shuffle.Card(String value, String symbol)","hard.Shuffle.Card.Shuffle.Card"]},{"name":"void TowerOfHanoi.Tower(int index)","description":"dynamic.TowerOfHanoi.Tower.TowerOfHanoi.Tower","location":"algorithms/dynamic/-tower-of-hanoi/-tower/-tower-of-hanoi.-tower.html","searchKeys":["Tower","void TowerOfHanoi.Tower(int index)","dynamic.TowerOfHanoi.Tower.TowerOfHanoi.Tower"]},{"name":"void Tree(Integer data)","description":"graphs.commons.Tree.Tree","location":"algorithms/graphs.commons/-tree/-tree.html","searchKeys":["Tree","void Tree(Integer data)","graphs.commons.Tree.Tree"]},{"name":"void add(int i)","description":"dynamic.TowerOfHanoi.Tower.add","location":"algorithms/dynamic/-tower-of-hanoi/-tower/add.html","searchKeys":["add","void add(int i)","dynamic.TowerOfHanoi.Tower.add"]},{"name":"void moveDisks(int n, TowerOfHanoi.Tower destination, TowerOfHanoi.Tower buffer)","description":"dynamic.TowerOfHanoi.Tower.moveDisks","location":"algorithms/dynamic/-tower-of-hanoi/-tower/move-disks.html","searchKeys":["moveDisks","void moveDisks(int n, TowerOfHanoi.Tower destination, TowerOfHanoi.Tower buffer)","dynamic.TowerOfHanoi.Tower.moveDisks"]},{"name":"void moveTopTo(TowerOfHanoi.Tower destination)","description":"dynamic.TowerOfHanoi.Tower.moveTopTo","location":"algorithms/dynamic/-tower-of-hanoi/-tower/move-top-to.html","searchKeys":["moveTopTo","void moveTopTo(TowerOfHanoi.Tower destination)","dynamic.TowerOfHanoi.Tower.moveTopTo"]},{"name":"void printContents()","description":"dynamic.TowerOfHanoi.Tower.printContents","location":"algorithms/dynamic/-tower-of-hanoi/-tower/print-contents.html","searchKeys":["printContents","void printContents()","dynamic.TowerOfHanoi.Tower.printContents"]},{"name":"void printNode()","description":"graphs.commons.Tree.printNode","location":"algorithms/graphs.commons/-tree/print-node.html","searchKeys":["printNode","void printNode()","graphs.commons.Tree.printNode"]}]
